<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RiotSharp</name>
    </assembly>
    <members>
        <member name="T:RiotSharp.Caching.Cache">
            <summary>
            In-memory cache implementation based on <see cref="T:RiotSharp.Caching.ICache"/>
            </summary>
        </member>
        <member name="M:RiotSharp.Caching.Cache.Add``2(``0,``1,System.TimeSpan)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Caching.Cache.Add``2(``0,``1,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Caching.Cache.Get``2(``0)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Caching.Cache.Remove``1(``0)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Caching.Cache.Clear">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Caching.Cache.Keys``1">
            <summary>
            Enumerator for the keys of a specific type.
            </summary>
            <typeparam name="TK">Type of the key.</typeparam>
            <returns>Enumerator for the keys of a specific type.</returns>
        </member>
        <member name="M:RiotSharp.Caching.Cache.Keys">
            <summary>
            Enumerator for all keys.
            </summary>
            <returns>Enumerator for all keys.</returns>
        </member>
        <member name="M:RiotSharp.Caching.Cache.Values``1">
            <summary>
            Enumerator for the values of a specific type.
            </summary>
            <typeparam name="TV">Type of the value which has to be a reference type.</typeparam>
            <returns>Enumerator for the values of a specific type.</returns>
        </member>
        <member name="M:RiotSharp.Caching.Cache.Values">
            <summary>
            Enumerator for all values.
            </summary>
            <returns>Enumerator for all values.</returns>
        </member>
        <member name="M:RiotSharp.Caching.Cache.Count">
            <summary>
            Total amount of (key, value) pairs in the cache.
            </summary>
            <returns>Total amount of (key, value) pairs in the cache.</returns>
        </member>
        <member name="T:RiotSharp.Caching.CacheData`1">
            <summary>
            Wrapper for file cache
            </summary>
            <typeparam name="T">Type of the data</typeparam>
        </member>
        <member name="M:RiotSharp.Caching.CacheData`1.#ctor(System.Int64,`0)">
            <summary>
            Initializes a CacheData class
            </summary>
            <param name="ttlMins">Minutes for cache to live</param>
            <param name="data">Data to store in cache</param>
        </member>
        <member name="P:RiotSharp.Caching.CacheData`1.TtlMinutes">
            <summary>
            Minutes for cache to live
            </summary>
        </member>
        <member name="P:RiotSharp.Caching.CacheData`1.Data">
            <summary>
            Data to store in cache
            </summary>
        </member>
        <member name="P:RiotSharp.Caching.CacheData`1.CreatedAt">
            <summary>
            To decide on if cache is expired or not, store created time
            </summary>
        </member>
        <member name="T:RiotSharp.Caching.FileCache">
            <summary>
            Cache implementation which will write the cache to a file.
            </summary>
            <seealso cref="T:RiotSharp.Caching.ICache" />
        </member>
        <member name="M:RiotSharp.Caching.FileCache.#ctor(System.String)">
            <summary>
            Create file cache instance
            </summary>
            <param name="dir">Directory for the cache to store in</param>
        </member>
        <member name="M:RiotSharp.Caching.FileCache.Add``2(``0,``1,System.TimeSpan)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Caching.FileCache.Add``2(``0,``1,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Caching.FileCache.Clear">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Caching.FileCache.Get``2(``0)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Caching.FileCache.Remove``1(``0)">
            <inheritdoc />
        </member>
        <member name="T:RiotSharp.Caching.ICache">
            <summary>
            Interface for caching data in-memory.
            </summary>
        </member>
        <member name="M:RiotSharp.Caching.ICache.Add``2(``0,``1,System.TimeSpan)">
            <summary>
            Add a (key, value) pair to the cache with a relative expiry time (e.g. 2 mins).
            </summary>
            <typeparam name="TK">Type of the key.</typeparam>
            <typeparam name="TV">Type of the value which has to be a reference type.</typeparam>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="slidingExpiry">The sliding time at the end of which the (key, value) pair should expire and
            be purged from the cache.</param>
        </member>
        <member name="M:RiotSharp.Caching.ICache.Add``2(``0,``1,System.DateTime)">
            <summary>
            Add a (key, value) pair to the cache with an absolute expiry date (e.g. 23:33:00 03/04/2030)
            </summary>
            <typeparam name="TK">Type of the key.</typeparam>
            <typeparam name="TV">Type of the value which has to be a reference type.</typeparam>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="absoluteExpiry">The absolute expiry date when the (key, value) pair should expire and
            be purged from the cache.</param>
        </member>
        <member name="M:RiotSharp.Caching.ICache.Get``2(``0)">
            <summary>
            Get a value from the cache.
            </summary>
            <typeparam name="TK">Type of the key.</typeparam>
            <typeparam name="TV">Type of the value which has to be a reference type.</typeparam>
            <param name="key">The key</param>
            <returns>The value if the key exists in the cache, null otherwise.</returns>
        </member>
        <member name="M:RiotSharp.Caching.ICache.Remove``1(``0)">
            <summary>
            Remove the value associated with the specified key from the cache.
            </summary>
            <typeparam name="TK">Type of the key.</typeparam>
            <param name="key">The key.</param>
        </member>
        <member name="M:RiotSharp.Caching.ICache.Clear">
            <summary>
            Clear the cache.
            </summary>
        </member>
        <member name="T:RiotSharp.Caching.PassThroughCache">
            <summary>
            Implementation of ICache for disabling cache
            </summary>
        </member>
        <member name="M:RiotSharp.Caching.PassThroughCache.Add``2(``0,``1,System.TimeSpan)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Caching.PassThroughCache.Add``2(``0,``1,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Caching.PassThroughCache.Clear">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Caching.PassThroughCache.Get``2(``0)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Caching.PassThroughCache.Remove``1(``0)">
            <inheritdoc />
        </member>
        <member name="T:RiotSharp.Endpoints.ChampionEndpoint.Champion">
            <summary>
            Class representing a Champion in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.ChampionEndpoint.Champion.Active">
            <summary>
            Indicates if the champion is active.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.ChampionEndpoint.Champion.BotEnabled">
            <summary>
            Bot enabled flag (for custom games).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.ChampionEndpoint.Champion.BotMmEnabled">
            <summary>
            Bot Match Made enabled flag (for Co-op vs. AI games).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.ChampionEndpoint.Champion.FreeToPlay">
            <summary>
            Indicates if the champion is free to play. Free to play champions are rotated periodically.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.ChampionEndpoint.Champion.Id">
            <summary>
            Champion ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.ChampionEndpoint.Champion.RankedPlayEnabled">
            <summary>
            Ranked play enabled flag.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.ChampionEndpoint.ChampionEndpoint">
            <summary>
            Implementation of the IChampionEndpoint interface.
            </summary>
            <seealso cref="T:RiotSharp.Endpoints.Interfaces.IChampionEndpoint" />
        </member>
        <member name="M:RiotSharp.Endpoints.ChampionEndpoint.ChampionEndpoint.#ctor(RiotSharp.Http.Interfaces.IRateLimitedRequester)">
            <summary>
            Initializes a new instance of the <see cref="T:RiotSharp.Endpoints.ChampionEndpoint.ChampionEndpoint"/> class.
            </summary>
            <param name="requester">The requester.</param>
        </member>
        <member name="M:RiotSharp.Endpoints.ChampionEndpoint.ChampionEndpoint.GetChampionRotationAsync(RiotSharp.Misc.Region)">
            <inheritdoc />
        </member>
        <member name="P:RiotSharp.Endpoints.ChampionEndpoint.ChampionList.Champions">
            <summary>
            List of Champions.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.ChampionEndpoint.ChampionRotation">
            <summary>
            Class representing Champions in the current rotation in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.ChampionEndpoint.ChampionRotation.FreeChampionIds">
            <summary>
            List of free champions.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.ChampionEndpoint.ChampionRotation.FreeChampionIdsForNewPlayers">
            <summary>
            List of free champions for new players.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.ChampionEndpoint.ChampionRotation.MaxNewPlayerLevel">
            <summary>
            Current max new player level.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.ChampionMasteryEndpoint.ChampionMastery">
            <summary>
            Class representing a champion mastery for
            specified player and champion combination (ChampionMastery API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.ChampionMasteryEndpoint.ChampionMastery.ChampionId">
            <summary>
            Champion ID for this entry.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.ChampionMasteryEndpoint.ChampionMastery.ChampionLevel">
            <summary>
            Champion level for specified player and champion combination.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.ChampionMasteryEndpoint.ChampionMastery.ChampionPoints">
            <summary>
            Total number of champion points for this player and champion combination -
            they are used to determine championLevel.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.ChampionMasteryEndpoint.ChampionMastery.ChampionPointsSinceLastLevel">
            <summary>
            Number of points earned since current level has been achieved.
            Zero if player reached maximum champion level for this champion.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.ChampionMasteryEndpoint.ChampionMastery.ChampionPointsUntilNextLevel">
            <summary>
            Number of points needed to achieve next level.
            Zero if player reached maximum champion level for this champion.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.ChampionMasteryEndpoint.ChampionMastery.ChestGranted">
            <summary>
            Is chest granted for this champion or not in current season.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.ChampionMasteryEndpoint.ChampionMastery.LastPlayTime">
            <summary>
            Last time this champion was played by this player.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.ChampionMasteryEndpoint.ChampionMastery.SummonerId">
            <summary>
            Player ID for this entry.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.Interfaces.IChampionEndpoint">
            <summary>
            The Champion Endpoint.
            </summary>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.IChampionEndpoint.GetChampionRotationAsync(RiotSharp.Misc.Region)">
            <summary>
            Get the list of free champions by region asynchronously.
            </summary>
            <param name="region">Region in which you wish to look for champion rotation.</param>
            <returns>An object containing id's of champions in rotation as well as max new player level.</returns>
        </member>
        <member name="T:RiotSharp.Endpoints.Interfaces.IChampionMasteryEndpoint">
            <summary>
            The Champion Mastery Endpoint.
            </summary>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.IChampionMasteryEndpoint.GetChampionMasteryAsync(RiotSharp.Misc.Region,System.String,System.Int64)">
            <summary>
            Gets a champion mastery by summoner ID asynchronously.
            </summary>
            <param name="region">Region where to retrieve the data.</param>
            <param name="summonerId">ID of the summoner for which to retrieve champion mastery.</param>
            <param name="championId">ID of the champion for which to retrieve mastery.</param>
            <returns>Champion mastery for summoner ID and champion ID.</returns>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.IChampionMasteryEndpoint.GetChampionMasteriesAsync(RiotSharp.Misc.Region,System.String)">
            <summary>
            Get all champion mastery entries sorted by number of champion points descending asynchronously.
            </summary>
            <param name="region">Region where to retrieve the data.</param>
            <param name="summonerId">ID of the summoner for which to retrieve champion mastery.</param>
            <returns>All champions mastery entries for the specified summoner ID.</returns>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.IChampionMasteryEndpoint.GetTotalChampionMasteryScoreAsync(RiotSharp.Misc.Region,System.String)">
            <summary>
            Get a player's total champion mastery score,
            which is the sum of individual champion mastery levels, by summoner ID asynchronously.
            </summary>
            <param name="region">Region where to retrieve the data.</param>
            <param name="summonerId">ID of the summoner for which to retrieve champion mastery.</param>
            <returns>Total champion mastery score for summoner ID.</returns>
        </member>
        <member name="T:RiotSharp.Endpoints.Interfaces.ILeagueEndpoint">
            <summary>
            The League Endpoint.
            </summary>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.ILeagueEndpoint.GetLeaguePositionsAsync(RiotSharp.Misc.Region,System.String)">
            <summary>
            Retrieves the league positions for the specified summoner asynchronously.
            </summary>
            <param name="region"><see cref="T:RiotSharp.Misc.Region"/> in which you wish to look for the league positions of the summoner.</param>
            <param name="summonerId">The summoner id.</param>
            <returns><see cref="T:RiotSharp.Endpoints.LeagueEndpoint.LeaguePosition" /> of the summoner in the leagues.</returns>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.ILeagueEndpoint.GetChallengerLeagueAsync(RiotSharp.Misc.Region,System.String)">
            <summary>
            Get the challenger league for a particular queue asynchronously.
            </summary>
            <param name="region"><see cref="T:RiotSharp.Misc.Region"/> in which you wish to look for a challenger league.</param>
            <param name="queue">Queue in which you wish to look for a challenger league.</param>
            <returns>A <see cref="T:RiotSharp.Endpoints.LeagueEndpoint.League" /> which contains all the challengers for this specific region and queue.</returns>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.ILeagueEndpoint.GetMasterLeagueAsync(RiotSharp.Misc.Region,System.String)">
            <summary>
            Get the master league for a particular queue asynchronously.
            </summary>
            <param name="region"><see cref="T:RiotSharp.Misc.Region"/> in which you wish to look for a master league.</param>
            <param name="queue">Queue in which you wish to look for a master league.</param>
            <returns>A <see cref="T:RiotSharp.Endpoints.LeagueEndpoint.League" /> which contains all the masters for this specific region and queue.</returns>
        </member>
        <member name="T:RiotSharp.Endpoints.Interfaces.IMatchEndpoint">
            <summary>
            The Match Endpoint.
            </summary>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.IMatchEndpoint.GetMatchIdsByTournamentCodeAsync(RiotSharp.Misc.Region,System.String)">
            <summary>
            Get the matches' ID of the specified tournament asynchronously.
            </summary>
            <param name="region">Region in which the tournament took place.</param>
            <param name="tournamentCode">The tournament ID to be retrieved.</param>
            <returns>A list containing the matches' ID.</returns>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.IMatchEndpoint.GetMatchAsync(RiotSharp.Misc.Region,System.Int64)">
            <summary>
            Get match information about a specific match asynchronously.
            </summary>
            <param name="region">Region in which the match took place.</param>
            <param name="matchId">The match ID to be retrieved.</param>
            <returns>A match object containing information about the match.</returns>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.IMatchEndpoint.GetMatchListAsync(RiotSharp.Misc.Region,System.String,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{RiotSharp.Endpoints.MatchEndpoint.Enums.Season},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            Get the list of matches of a specific summoner asynchronously.
            </summary>
            <param name="region">Region in which the summoner is.</param>
            <param name="accountId">Account ID for which you want to retrieve the match list.</param>
            <param name="championIds">List of champion IDS to use for fetching games.</param>
            <param name="queues">List of queue types to use for fetching games.</param>
            <param name="seasons">List of seasons for which to filter the match list by.</param>
            <param name="beginTime">The earliest date you wish to get matches from.</param>
            <param name="endTime">The latest date you wish to get matches from.</param>
            <param name="beginIndex">The begin index to use for fetching matches.</param>
            <param name="endIndex">The end index to use for fetching matches.</param>
            <returns>A list of Match references object.</returns>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.IMatchEndpoint.GetMatchTimelineAsync(RiotSharp.Misc.Region,System.Int64)">
            <summary>
            Get match timeline by match ID asynchronously. 
            </summary>
            <param name="region">Region in which the summoner is.</param>
            <param name="matchId">The match ID of the timeline to be retrieved.</param>
        </member>
        <member name="T:RiotSharp.Endpoints.Interfaces.ISpectatorEndpoint">
            <summary>
            The Spectator Endpoint.
            </summary>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.ISpectatorEndpoint.GetCurrentGameAsync(RiotSharp.Misc.Region,System.String)">
            <summary>
            Gets the current game by summoner ID asynchronously.
            </summary>
            <param name="region">Region where to retrieve the data.</param>
            <param name="summonerId">ID of the summoner for which to retrieve current game.</param>
            <returns>Current game of the summoner.</returns>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.ISpectatorEndpoint.GetFeaturedGamesAsync(RiotSharp.Misc.Region)">
            <summary>
            Gets the featured games by region asynchronously.
            </summary>
            <param name="region">Region where to retrieve the data.</param>
            <returns>Featured games for the region.</returns>
        </member>
        <member name="T:RiotSharp.Endpoints.Interfaces.IStatusEndpoint">
            <summary>
            Entry point for the status API.
            Requests to this endpoint are not counted against the application rate limits and are not being cached.
            </summary>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.IStatusEndpoint.GetShardStatusAsync(RiotSharp.Misc.Region)">
            <summary>
            Get the League of Legends status for the given shard asynchronously.
            </summary>
            <param name="region">Region for which to check the status.</param>
            <returns>A shard status object containing different information regarding the shard.</returns>
        </member>
        <member name="T:RiotSharp.Endpoints.Interfaces.ISummonerEndpoint">
            <summary>
            The Summoner Endpoint.
            </summary>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.ISummonerEndpoint.GetSummonerBySummonerIdAsync(RiotSharp.Misc.Region,System.String)">
            <summary>
            Get a summoner by summoner id asynchronously.
            </summary>
            <param name="region">Region in which you wish to look for a summoner.</param>
            <param name="summonerId">Id of the summoner you're looking for.</param>
            <returns>A summoner.</returns>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.ISummonerEndpoint.GetSummonerByAccountIdAsync(RiotSharp.Misc.Region,System.String)">
            <summary>
            Get a summoner by account id asynchronously.
            </summary>
            <param name="region">Region in which you wish to look for a summoner.</param>
            <param name="accountId">Account id of the summoner you're looking for.</param>
            <returns>A summoner.</returns>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.ISummonerEndpoint.GetSummonerByNameAsync(RiotSharp.Misc.Region,System.String)">
            <summary>
            Get a summoner by name asynchronously.
            </summary>
            <param name="region">Region in which you wish to look for a summoner.</param>
            <param name="summonerName">Name of the summoner you're looking for.</param>
            <returns>A summoner.</returns>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.ISummonerEndpoint.GetSummonerByPuuidAsync(RiotSharp.Misc.Region,System.String)">
            <summary>
            Get a summoner by puuid asynchronously.
            </summary>
            <param name="region">Region in which you wish to look for a summoner.</param>
            <param name="puuid">PUUID of the summoner you're looking for.</param>
            <returns>A summoner.</returns>
        </member>
        <member name="T:RiotSharp.Endpoints.Interfaces.IThirdPartyEndpoint">
            <summary>
            The Third Party Endpoint.
            </summary>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.IThirdPartyEndpoint.GetThirdPartyCodeBySummonerIdAsync(RiotSharp.Misc.Region,System.String)">
            <summary>
            Get a thrid party code by summoner id asynchronously.
            </summary>
            <param name="region">Region in which you wish to look for a summoner.</param>
            <param name="summonerId">Id of the summoner you're looking for.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.Static.IStaticChampionEndpoint.GetByKeyAsync(System.String,System.String,RiotSharp.Misc.Language)">
            <summary>
            Get a champion by his key asynchronously.
            </summary>
            <param name="key">Champion key, e.g. "Aatrox".</param>
            <param name="version">Patch version for returned data.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <returns>A champion.</returns>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.Static.IStaticChampionEndpoint.GetAllAsync(System.String,RiotSharp.Misc.Language,System.Boolean)">
            <summary>
            Get a list of all champions asynchronously.
            </summary>
            <param name="version">Patch version for returned data.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <param name="fullData">If true ChampionStatic instances will populate properties, like 'passive', 'spells', etc. If false these will be null.</param>
            <returns>A ChampionListStatic object containing all champions.</returns>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.Static.IStaticEndpointProvider.GetEndpoint``1">
            <typeparam name="TStaticEndpoint">Type of Endpoint to receive</typeparam>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.Static.IStaticItemEndpoint.GetAllAsync(System.String,RiotSharp.Misc.Language)">
            <summary>
            Get a list of all items synchronously.
            </summary>
            <param name="version">Patch version for returned data.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <returns>An ItemListStatic object containing all items.</returns>
        </member>
        <member name="T:RiotSharp.Endpoints.Interfaces.Static.IStaticLanguageEndpoint">
            <summary>
            Interface for the static language endpoint
            </summary>
            <seealso cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticEndpoint" />
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.Static.IStaticLanguageEndpoint.GetLanguagesAsync">
            <summary>
            Get languages asynchronously.
            </summary>
            <returns>
            A list of languages.
            </returns>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.Static.IStaticLanguageEndpoint.GetLanguageStringsAsync(System.String,RiotSharp.Misc.Language)">
            <summary>
            Retrieve language strings asynchronously.
            </summary>
            <param name="version">Version of the dragon API.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <returns>
            A object containing the language strings.
            </returns>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.Static.IStaticMapEndpoint.GetAllAsync(System.String,RiotSharp.Misc.Language)">
            <summary>
            Get maps asynchronously.
            </summary>
            <param name="version">Patch version for returned data.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <returns>A list of objects representing maps.</returns>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.Static.IStaticMasteryEndpoint.GetAllAsync(System.String,RiotSharp.Misc.Language)">
            <summary>
            Get a list of all masteries asynchronously.
            </summary>
            <param name="version">Patch version for returned data.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <returns>An MasteryListStatic object containing all masteries.</returns>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.Static.IStaticProfileIconEndpoint.GetAllAsync(System.String,RiotSharp.Misc.Language)">
            <summary>
            Get a list of profile icons asynchronously
            </summary>
            <param name="version">Patch version for returned data.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <returns>A ProfileIconListStatic object containing all runes.</returns>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.Static.IStaticRealmEndpoint.GetAllAsync(RiotSharp.Misc.Region)">
            <summary>
            Retrieve realm data asynchronously.
            </summary>
            <param name="region">Region corresponding to data to retrieve.</param>
            <returns>A realm object containing the requested information.</returns>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.Static.IStaticReforgedRuneEndpoint.GetAllAsync(System.String,RiotSharp.Misc.Language)">
            <summary>
            Get a list of all reforged runes asynchronously.
            </summary>
            <param name="version">Patch version for returned data.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <returns>A summoner spell.</returns>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.Static.IStaticRuneEndpoint.GetAllAsync(System.String,RiotSharp.Misc.Language)">
            <summary>
            Get a list of all runes asynchronously.
            </summary>
            <param name="version">Patch version for returned data.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <returns>A RuneListStatic object containing all runes.</returns>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.Static.IStaticSummonerSpellEndpoint.GetAllAsync(System.String,RiotSharp.Misc.Language)">
            <summary>
            Get a list of all summoner spells asynchronously.
            </summary>
            <param name="version">Patch version for returned data.</param>
            <param name="language">Language of the data to be retrieved.</param>
            <returns>A SummonerSpellListStatic object containing all summoner spells.</returns>
        </member>
        <member name="M:RiotSharp.Endpoints.Interfaces.Static.IStaticTarballLinkEndPoint.Get(System.String,System.Boolean)">
            <summary>
            Get the link for a tarball
            </summary>
            <param name="version">Patch version for returned data.</param>
            <param name="useHttps">Enables HTTPS based on the boolean. Default is true.</param>
            <returns>
            A string containing the URL for the tarball file.
            </returns>
        </member>
        <member name="T:RiotSharp.Endpoints.LeagueEndpoint.Enums.Tier">
            <summary>
            Tier of the league (League API).
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.LeagueEndpoint.Enums.Tier.Master">
            <summary>
            Master tier.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.LeagueEndpoint.Enums.Tier.Challenger">
            <summary>
            Challenger tier.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.LeagueEndpoint.Enums.Tier.Diamond">
            <summary>
            Diamon tier.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.LeagueEndpoint.Enums.Tier.Platinum">
            <summary>
            Platinum tier.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.LeagueEndpoint.Enums.Tier.Gold">
            <summary>
            Gold tier.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.LeagueEndpoint.Enums.Tier.Silver">
            <summary>
            Silver tier.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.LeagueEndpoint.Enums.Tier.Bronze">
            <summary>
            Bronze tier.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.LeagueEndpoint.Enums.Tier.Unranked">
            <summary>
            Unranked.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.LeagueEndpoint.League">
            <summary>
            Class representing a League in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.LeagueEndpoint.League.Entries">
            <summary>
            The requested league entries.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.LeagueEndpoint.League.Name">
            <summary>
            This name is an internal place-holder name only.
            Display and localization of names in the game client are handled client-side.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.LeagueEndpoint.League.Queue">
            <summary>
            League queue (eg: RankedSolo5x5).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.LeagueEndpoint.League.Tier">
            <summary>
            League tier (eg: Challenger).
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.LeagueEndpoint.LeagueEndpoint">
            <summary>
            Implementation of <see cref="T:RiotSharp.Endpoints.Interfaces.ILeagueEndpoint"/>
            </summary>
        </member>
        <member name="M:RiotSharp.Endpoints.LeagueEndpoint.LeagueEndpoint.#ctor(RiotSharp.Http.Interfaces.IRateLimitedRequester)">
            <summary>
            Initializes a new instance of the <see cref="T:RiotSharp.Endpoints.LeagueEndpoint.LeagueEndpoint"/> class.
            </summary>
            <param name="requester">The requester.</param>
        </member>
        <member name="M:RiotSharp.Endpoints.LeagueEndpoint.LeagueEndpoint.GetLeaguePositionsAsync(RiotSharp.Misc.Region,System.String)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.LeagueEndpoint.LeagueEndpoint.GetChallengerLeagueAsync(RiotSharp.Misc.Region,System.String)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.LeagueEndpoint.LeagueEndpoint.GetMasterLeagueAsync(RiotSharp.Misc.Region,System.String)">
            <inheritdoc />
        </member>
        <member name="T:RiotSharp.Endpoints.LeagueEndpoint.LeaguePosition">
            <summary>
            Team or summoner in a league (League API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.LeagueEndpoint.LeaguePosition.LeagueName">
            <summary>
            The name of the league of the participant.
            Only when it's called from the GetLeaguePositions()
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.LeagueEndpoint.LeaguePosition.QueueType">
            <summary>
            The queue type of the league.
            Only for the GetLeaguePositions() -> don't exist when it's an entry from a League
            as there is already the Queue property in this case.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.LeagueEndpoint.LeaguePosition.Rank">
            <summary>
            The rank of the participant in a league.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.LeagueEndpoint.LeaguePosition.Tier">
            <summary>
             The league tier of the participant.
             Only when it's called from the GetLeaguePositions()
             </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.LeagueEndpoint.LeaguePosition.FreshBlood">
            <summary>
            Specifies if the participant is fresh blood.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.LeagueEndpoint.LeaguePosition.HotStreak">
            <summary>
            Specifies if the participant is on a hot streak.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.LeagueEndpoint.LeaguePosition.Inactive">
            <summary>
            Specifies if the participant is inactive.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.LeagueEndpoint.LeaguePosition.Veteran">
            <summary>
            Specifies if the participant is a veteran.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.LeagueEndpoint.LeaguePosition.LeaguePoints">
            <summary>
            The league points of the participant.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.LeagueEndpoint.LeaguePosition.Losses">
            <summary>
            The number of losses for the participant.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.LeagueEndpoint.LeaguePosition.MiniSeries">
            <summary>
            Mini series data for the participant. Only present if the participant is currently in a mini series.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.LeagueEndpoint.LeaguePosition.PlayerOrTeamId">
            <summary>
            The ID of the participant (i.e., summoner or team) represented by this entry.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.LeagueEndpoint.LeaguePosition.PlayerOrTeamName">
            <summary>
            The name of the the participant (i.e., summoner or team) represented by this entry.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.LeagueEndpoint.LeaguePosition.Wins">
            <summary>
            The number of wins for the participant.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.LeagueEndpoint.MiniSeries">
            <summary>
            LeaguePosition has entered a MiniSeries (League API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.LeagueEndpoint.MiniSeries.Losses">
            <summary>
            Number of current losses in the mini series.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.LeagueEndpoint.MiniSeries.Progress">
            <summary>
            String showing the current, sequential mini series progress where 'W' represents a win, 'L' represents a
            loss, and 'N' represents a game that hasn't been played yet.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.LeagueEndpoint.MiniSeries.Target">
            <summary>
            Number of wins required for promotion.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.LeagueEndpoint.MiniSeries.Wins">
            <summary>
            Number of current wins in the mini series.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.BannedChampion">
            <summary>
            Class representing a banned champion (Game API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.BannedChampion.ChampionId">
            <summary>
            Banned champion ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.BannedChampion.PickTurn">
            <summary>
            Turn during which the champion was banned.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.Enums.AscendedType">
            <summary>
            Ascended type.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.AscendedType.ChampionAscended">
            <summary>
            Champion ascended.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.AscendedType.ClearAscended">
            <summary>
            Clear ascended.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.AscendedType.MinionAscended">
            <summary>
            Minion ascended.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.Enums.BuildingType">
            <summary>
            Building type (Match API).
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.BuildingType.InhibitorBuilding">
            <summary>
            Inhibitors.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.BuildingType.TowerBuilding">
            <summary>
            Towers.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.Enums.CapturedPoint">
            <summary>
            Class representing a capture point in a dominion game (Match API).
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.CapturedPoint.PointA">
            <summary>
            Point A.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.CapturedPoint.PointB">
            <summary>
            Point B.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.CapturedPoint.PointC">
            <summary>
            Point C.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.CapturedPoint.PointD">
            <summary>
            Point D.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.CapturedPoint.PointE">
            <summary>
            Point E.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.Enums.LaneType">
            <summary>
            Lane's type (Match API).
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.LaneType.BotLane">
            <summary>
            Corresponds to the bot lane.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.LaneType.MidLane">
            <summary>
            Corresponds to the mid lane.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.LaneType.TopLane">
            <summary>
            Corresponds to the top lane.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.Enums.LevelUpType">
            <summary>
            Type of level up (Match API).
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.LevelUpType.Evolve">
            <summary>
            When leveling up involves evolving (notably Kha'zix).
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.LevelUpType.Normal">
            <summary>
            Normal leveling up.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.Enums.MatchEventType">
            <summary>
            Event's type (Match API).
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.MatchEventType.AscendedEvent">
            <summary>
            Ascended event.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.MatchEventType.BuildingKill">
            <summary>
            Triggers on building kills.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.MatchEventType.CapturePoint">
            <summary>
            Triggers on captured point in dominion games.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.MatchEventType.ChampionKill">
            <summary>
            Triggers on champion kills.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.MatchEventType.EliteMonsterKill">
            <summary>
            Triggers on Nashor or Dragon kills.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.MatchEventType.ItemDestroyed">
            <summary>
            Triggers on item destructions.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.MatchEventType.ItemPurchased">
            <summary>
            Triggers on item purchases.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.MatchEventType.ItemSold">
            <summary>
            Triggers on item sells.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.MatchEventType.ItemUndo">
            <summary>
            Triggers on undo item purchases.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.MatchEventType.SkillLevelUp">
            <summary>
            Triggers on skill level ups.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.MatchEventType.WardKill">
            <summary>
            Triggers on ward kills.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.MatchEventType.WardPlaced">
            <summary>
            Triggers on ward placements.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.Enums.MonsterSubType">
            <summary>
            Type of monster (Match API).
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.MonsterSubType.AirDragon">
            <summary>
            Corresponds to the cloud drake.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.MonsterSubType.WaterDragon">
            <summary>
            Corresponds to the ocean drake.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.MonsterSubType.EarthDragon">
            <summary>
            Corresponds to the mountain drake.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.MonsterSubType.FireDragon">
            <summary>
            Corresponds to the infernal drake.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.MonsterSubType.ElderDragon">
            <summary>
            Corresponds to the elder dragon.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.Enums.MonsterType">
            <summary>
            Type of monster (Match API).
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.MonsterType.BaronNashor">
            <summary>
            Corresponds to the baron Nashor.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.MonsterType.BlueGolem">
            <summary>
            Corresponds to the blue golem.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.MonsterType.Dragon">
            <summary>
            Corresponds to the dragon.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.MonsterType.RedLizard">
            <summary>
            Corresponds to the red lizard.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.MonsterType.Vilemaw">
            <summary>
            Corresponds to Vilemaw (on the 3vs3 map).
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.MonsterType.RiftHerald">
            <summary>
            Corresponds to Rift Herald.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.Enums.Season">
            <summary>
            Season (Match API).
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.Season.PreSeason3">
            <summary>
            Pre season 3.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.Season.Season3">
            <summary>
            Season 3.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.Season.PreSeason2014">
            <summary>
            Pre season 2014.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.Season.Season2014">
            <summary>
            Season 2014.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.Season.PreSeason2015">
            <summary>
            Pre season 2015.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.Season.Season2015">
            <summary>
            Season 2015.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.Season.PreSeason2016">
            <summary>
            Pre season 2016.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.Season.Season2016">
            <summary>
            Season 2016.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.Season.PreSeason2017">
            <summary>
            Pre season 2017.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.Season.Season2017">
            <summary>
            Season 2017.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.Season.PreSeason2018">
            <summary>
            Pre season 2018.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.Season.Season2018">
            <summary>
            Season 2018.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.Season.PreSeason2019">
            <summary>
            Pre season 2019.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.Season.Season2019">
            <summary>
            Season 2019.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.Enums.TowerType">
            <summary>
            Type of tower (Match API).
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.TowerType.BaseTurret">
            <summary>
            Represents inhibitor turrets.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.TowerType.InnerTurret">
            <summary>
            Represents inner turrets.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.TowerType.NexusTurret">
            <summary>
            Represents nexus turrets.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.TowerType.OuterTurret">
            <summary>
            Represents outer turrets.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.TowerType.UndefinedTurret">
            <summary>
            Undefined turrets?
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.Enums.WardType">
            <summary>
            Type of the ward (Match API).
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.WardType.SightWard">
            <summary>
            Corresponds to green wards.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.WardType.TeemoMushroom">
            <summary>
            Corresponds to Teemo's mushrooms.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.WardType.Undefined">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.WardType.VisionWard">
            <summary>
            Corresponds to pink wards.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.WardType.YellowTrinket">
            <summary>
            Corresponds to warding totems.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.WardType.YellowTrinketUpgrade">
            <summary>
            Corresponds to upgraded warding totems.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.MatchEndpoint.Enums.WardType.BlueTrinket">
            <summary>
            Corresponds to a blue trinket.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.Mastery">
            <summary>
            Class representing a mastery of a participant (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Mastery.MasteryId">
            <summary>
            Mastery ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Mastery.Rank">
            <summary>
            Mastery rank.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.Match">
            <summary>
            Match class containing all properties to define a match.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Match.SeasonId">
            <summary>
            The season ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Match.QueueId">
            <summary>
            Specifies the Queue ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Match.GameId">
            <summary>
            Equivalent to match id
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Match.ParticipantIdentities">
            <summary>
            The participants identities.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Match.GameVersion">
            <summary>
            The game version.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Match.GameMode">
            <summary>
            The game mode.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Match.MapId">
            <summary>
            The map ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Match.GameType">
            <summary>
            The game type.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Match.Teams">
            <summary>
            The teams.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Match.Participants">
            <summary>
            The participants.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Match.GameDuration">
            <summary>
            The game duration.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Match.GameCreation">
            <summary>
            The date time of the game creation.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.MatchDetail">
            <summary>
            Details about a match (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchDetail.Teams">
            <summary>
            Team information.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchDetail.Timeline">
            <summary>
            Match timeline data. Not included by default.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.MatchEvent">
            <summary>
            Class representing a particular event during a match (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchEvent.AscendedType">
            <summary>
            The ascended type of the event. Only present if relevant.
            Note that CLEAR_ASCENDED refers to when a participants kills the ascended player.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchEvent.AssistingParticipantIds">
            <summary>
            The assisting participant IDs of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchEvent.BuildingType">
            <summary>
            The building type of the event (tower or inhibitor). Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchEvent.CreatorId">
            <summary>
            The creator ID of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchEvent.EventType">
            <summary>
            Event type (building kills, champion kills, ward placements, items purchases, etc).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchEvent.ItemAfterId">
            <summary>
            The ending item ID of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchEvent.ItemBeforeId">
            <summary>
            The starting item ID of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchEvent.ItemId">
            <summary>
            The item ID of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchEvent.KillerId">
            <summary>
            The killer ID of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchEvent.LaneType">
            <summary>
            The lane type of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchEvent.LevelUpType">
            <summary>
            The level up type of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchEvent.MonsterType">
            <summary>
            The monster type of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchEvent.MonsterSubType">
            <summary>
            The monster type of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchEvent.ParticipantId">
            <summary>
            The participant ID of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchEvent.CapturedPoint">
            <summary>
            The point captured in the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchEvent.Position">
            <summary>
            The position of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchEvent.SkillSlot">
            <summary>
            The skill slot of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchEvent.TeamId">
            <summary>
            The team ID of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchEvent.Timestamp">
            <summary>
            Represents how much time into the game the event occurred.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchEvent.TowerType">
            <summary>
            The tower type of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchEvent.VictimId">
            <summary>
            The victim ID of the event. Only present if relevant.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchEvent.WardType">
            <summary>
            The ward type of the event. Only present if relevant.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.MatchFrame">
            <summary>
            Class representing a frame in a match (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchFrame.Events">
            <summary>
            List of events for this frame.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchFrame.ParticipantFrames">
            <summary>
            Map of each participant ID to the participant's information for the frame.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchFrame.Timestamp">
            <summary>
            Represents how much time into the game the frame occurred.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchList.EndIndex">
            <summary>
            The end index of the list of matches.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchList.Matches">
            <summary>
            List of matches for the player
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchList.StartIndex">
            <summary>
            The start index of the list of matches.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchList.TotalGames">
            <summary>
            Total number of games within the list.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchReference.ChampionID">
            <summary>
            The ID of the champion played during the match.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchReference.Lane">
            <summary>
            Participant's lane.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchReference.GameId">
            <summary>
            The match ID relating to the match.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchReference.PlatformID">
            <summary>
            The ID of the platform on which the game is being played
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchReference.Queue">
            <summary>
            Match queue type.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchReference.Region">
            <summary>
            The region match was played in.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchReference.Role">
            <summary>
            Participant's role.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchReference.Season">
            <summary>
            Season match was played.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchReference.Timestamp">
            <summary>
            The date/time of which the game lobby was created.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.MatchSummary">
            <summary>
            Summary of a match (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchSummary.MapType">
            <summary>
            Map type.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchSummary.MatchCreation">
            <summary>
            Match creation time. Designates when the team select lobby is created and/or the match is made through
            match making, not when the game actually starts.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchSummary.MatchDuration">
            <summary>
            Match duration.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchSummary.MatchId">
            <summary>
            Match ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchSummary.MatchMode">
            <summary>
            Match mode.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchSummary.MatchType">
            <summary>
            Defines what GameType the match is eg. Custom, Matched, Tutorial.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchSummary.MatchVersion">
            <summary>
            Match version.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchSummary.ParticipantIdentities">
            <summary>
            Participants identity information.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchSummary.Participants">
            <summary>
            Participants information
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchSummary.QueueType">
            <summary>
            Match queue type.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchSummary.Region">
            <summary>
            Region where the match was played.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchSummary.Season">
            <summary>
            Season match was played.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.MatchTimeline">
            <summary>
            Class representing a match's timeline (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchTimeline.FrameInterval">
            <summary>
            Time between each returned frame.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.MatchTimeline.Frames">
            <summary>
            List of timeline frames for the game.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.Participant">
            <summary>
            Class representing a participant in a match (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Participant.ChampionId">
            <summary>
            Champion ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Participant.Masteries">
            <summary>
            List of mastery information.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Participant.ParticipantId">
            <summary>
            Participant ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Participant.Runes">
            <summary>
            List of rune information.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Participant.Spell1Id">
            <summary>
            First summoner spell ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Participant.Spell2Id">
            <summary>
            Second summoner spell ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Participant.Stats">
            <summary>
            Participant statistics.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Participant.TeamId">
            <summary>
            Team ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Participant.Timeline">
            <summary>
            Timeline data.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Participant.HighestAchievedSeasonTier">
            <summary>
            Highest achieved season tier.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.ParticipantFrame">
            <summary>
            Class representing a particular frame for a participant during a match (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantFrame.CurrentGold">
            <summary>
            Participant's current gold.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantFrame.JungleMinionsKilled">
            <summary>
            Number of jungle minions killed by participant.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantFrame.Level">
            <summary>
            Participant's current level.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantFrame.MinionsKilled">
            <summary>
            Number of minions killed by participant.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantFrame.ParticipantId">
            <summary>
            Participant ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantFrame.Position">
            <summary>
            Participant's position.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantFrame.TotalGold">
            <summary>
            Participant's total gold.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantFrame.XP">
            <summary>
            Experience earned by participant.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.ParticipantIdentity">
            <summary>
            Class representing a participant's identity in a match (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantIdentity.ParticipantId">
            <summary>
            Participant ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantIdentity.Player">
            <summary>
            Player information.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats">
            <summary>
            Class gathering statistics about a participant (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Assists">
            <summary>
            Number of assists.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.ChampLevel">
            <summary>
            Champion level achieved.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.CombatPlayerScore">
            <summary>
            If game was a dominion game, player's combat score, otherwise 0.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Deaths">
            <summary>
            Number of deaths.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.DoubleKills">
            <summary>
            Number of double kills.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.FirstBloodAssist">
            <summary>
            Flag indicating if participant got an assist on first blood.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.FirstBloodKill">
            <summary>
            Flag indicating if participant got first blood.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.FirstInhibitorAssist">
            <summary>
            Flag indicating if participant got an assist on the first inhibitor.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.FirstInhibitorKill">
            <summary>
            Flag indicating if participant destroyed the first inhibitor.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.FirstTowerAssist">
            <summary>
            Flag indicating if participant got an assist on the first tower.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.FirstTowerKill">
            <summary>
            Flag indicating if participant destroyed the first tower.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.GoldEarned">
            <summary>
            Gold earned.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.GoldSpent">
            <summary>
            Gold spent.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.InhibitorKills">
            <summary>
            Numer of inhibitor kills.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Item0">
            <summary>
            First item ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Item1">
            <summary>
            Second item ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Item2">
            <summary>
            Third item ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Item3">
            <summary>
            Fourth item ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Item4">
            <summary>
            Fifth item ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Item5">
            <summary>
            Sixth item ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Item6">
            <summary>
            Seventh item ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.KillingSprees">
            <summary>
            Number of killing sprees.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Kills">
            <summary>
            Number of kills.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.LargestCriticalStrike">
            <summary>
            Largest critical strike.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.LargestKillingSpree">
            <summary>
            Largest killing spree.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.LargestMultiKill">
            <summary>
            Largest multi kill.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.MagicDamageDealt">
            <summary>
            Magic damage dealt.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.MagicDamageDealtToChampions">
            <summary>
            Magic damage dealt to champions.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.MagicDamageTaken">
            <summary>
            Magic damage taken.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.TotalMinionsKilled">
            <summary>
            Minions kiled.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.NeutralMinionsKilled">
            <summary>
            Neutral minions killed.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.NeutralMinionsKilledEnemyJungle">
            <summary>
            Neutral jungle minions killed in the enemy team's jungle.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.NeutralMinionsKilledJungle">
            <summary>
            Neutral jungle minions killed in your team's jungle.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.NodeCapture">
            <summary>
            If game was a dominion game, number of node captures.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.NodeCaptureAssist">
            <summary>
            If game was a dominion game, number of node capture assists.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.NodeNeutralize">
            <summary>
            If game was a dominion game, number of node neutralizations.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.NodeNeutralizeAssist">
            <summary>
            If game was a dominion game, number of node neutralization assists.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.ObjectivePlayerScore">
            <summary>
            If game was a dominion game, player's objectives score, otherwise 0.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.PentaKills">
            <summary>
            Number of penta kills.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.PhysicalDamageDealt">
            <summary>
            Physical damage dealt.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.PhysicalDamageDealtToChampions">
            <summary>
            Physical damage dealt to champions.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.PhysicalDamageTaken">
            <summary>
            Physical damage taken.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.QuadraKills">
            <summary>
            Number of quadra kills.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.SightWardsBoughtInGame">
            <summary>
            Number of sight wards purchased.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.TeamObjective">
            <summary>
            If game was a dominion game, number of completed team objectives (i.e., quests).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.TotalDamageDealt">
            <summary>
            Total damage dealt.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.TotalDamageDealtToChampions">
            <summary>
            Total damage dealt to champions.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.TotalDamageTaken">
            <summary>
            Total damage taken.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.TotalHeal">
            <summary>
            Total heal.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.TotalPlayerScore">
            <summary>
            If game was a dominion game, player's total score, otherwise 0.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.TotalScoreRank">
            <summary>
            If game was a dominion game, team rank of the player's total score (e.g., 1-5).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.TotalTimeCrowdControlDealt">
            <summary>
            Total time crowd control dealt.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.TotalUnitsHealed">
            <summary>
            Total units healed.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.TowerKills">
            <summary>
            Number of tower kills.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.TripleKills">
            <summary>
            Number of triple kills.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.TrueDamageDealt">
            <summary>
            True damage dealt.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.TrueDamageDealtToChampions">
            <summary>
            True damage dealt to champions.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.TrueDamageTaken">
            <summary>
            True damage taken.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.UnrealKills">
            <summary>
            Number of unreal kills.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.VisionScore">
            <summary>
            Vision score.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.VisionWardsBoughtInGame">
            <summary>
            Number of vision wards purchased.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.WardsKilled">
            <summary>
            Number of wards killed.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.WardsPlaced">
            <summary>
            Number of wards placed.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Winner">
            <summary>
            Flag indicating whether or not the participant won.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.PerkPrimaryStyle">
            <summary>
            Primary rune path.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.PerkSubStyle">
            <summary>
            Secondary rune path.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Perk0">
            <summary>
            Primary path keystone rune.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Perk1">
            <summary>
            Primary path rune.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Perk2">
            <summary>
            Primary path rune.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Perk3">
            <summary>
            Primary path rune.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Perk4">
            <summary>
            Secondary path rune.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Perk5">
            <summary>
            Secondary path rune.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Perk1Var1">
            <summary>
            Post game rune stat of Perk1.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Perk1Var2">
            <summary>
            Post game rune stat of Perk1.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Perk1Var3">
            <summary>
            Post game rune stat of Perk1.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Perk2Var1">
            <summary>
            Post game rune stat of Perk2.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Perk2Var2">
            <summary>
            Post game rune stat of Perk2.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Perk2Var3">
            <summary>
            Post game rune stat of Perk2.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Perk3Var1">
            <summary>
            Post game rune stat of Perk3.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Perk3Var2">
            <summary>
            Post game rune stat of Perk3.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Perk3Var3">
            <summary>
            Post game rune stat of Perk3.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Perk4Var1">
            <summary>
            Post game rune stat of Perk4.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Perk4Var2">
            <summary>
            Post game rune stat of Perk4.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Perk4Var3">
            <summary>
            Post game rune stat of Perk4.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Perk5Var1">
            <summary>
            Post game rune stat of Perk5.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Perk5Var2">
            <summary>
            Post game rune stat of Perk5.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantStats.Perk5Var3">
            <summary>
            Post game rune stat of Perk5.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantTimeline.Lane">
            <summary>
            The lane of the participant.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantTimeline.Role">
            <summary>
            The role of the participant.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantTimeline.ParticipantId">
            <summary>
            The participant ID.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.ParticipantTimelineData">
            <summary>
            Class holding timeline values (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantTimelineData.TenToTwenty">
            <summary>
            Value per minute from 10 min to 20 min.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantTimelineData.ThirtyToEnd">
            <summary>
            Value per minute from 30 min to the end of the game.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantTimelineData.TwentyToThirty">
            <summary>
            Value per minute from 20 min to 30 min.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.ParticipantTimelineData.ZeroToTen">
            <summary>
            Value per minute from the beginning of the game to 10 min.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.Player">
            <summary>
            Player in a match (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Player.CurrentPlatformId">
            <summary>
            Current platform ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Player.PlatformId">
            <summary>
            Platform ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Player.MatchHistoryUri">
            <summary>
            Match history URI.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Player.ProfileIcon">
            <summary>
            Profile icon ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Player.CurrentAccountId">
            <summary>
            Current account ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Player.AccountId">
            <summary>
            Account ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Player.SummonerId">
            <summary>
            Summoner ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Player.SummonerName">
            <summary>
            Summoner name.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.Position">
            <summary>
            Participant's position (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Position.X">
            <summary>
            Participant's X coordinate.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Position.Y">
            <summary>
            Participant's Y coordinate.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.Rune">
            <summary>
            Class representing a rune of a participant (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Rune.Rank">
            <summary>
            Rune rank.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.Rune.RuneId">
            <summary>
            Rune ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.TeamBan.PickTurn">
            <summary>
            The pick turn where the champion has been banned.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.TeamBan.ChampionId">
            <summary>
            ID of the banned champion.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.MatchEndpoint.TeamStats">
            <summary>
            Class representing a team in a match (Match API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.TeamStats.Bans">
            <summary>
            If game was draft mode, contains banned champion data, otherwise null.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.TeamStats.BaronKills">
            <summary>
            Number of times the team killed baron.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.TeamStats.DominionVictoryScore">
            <summary>
            If game was a dominion game, specifies the points the team had at game end, otherwise null.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.TeamStats.DragonKills">
            <summary>
            Number of times the team killed dragon.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.TeamStats.FirstBaron">
            <summary>
            Flag indicating whether or not the team got the first baron kill.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.TeamStats.FirstBlood">
            <summary>
            Flag indicating whether or not the team got first blood.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.TeamStats.FirstDragon">
            <summary>
            Flag indicating whether or not the team got the first dragon kill.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.TeamStats.FirstInhibitor">
            <summary>
            Flag indicating whether or not the team destroyed the first inhibitor.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.TeamStats.FirstRiftHerald">
            <summary>
            Flag indicating whether or not the team killed the first rift herald.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.TeamStats.FirstTower">
            <summary>
            Flag indicating whether or not the team destroyed the first tower.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.TeamStats.InhibitorKills">
            <summary>
            Number of inhibitors the team destroyed.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.TeamStats.RiftHeraldKills">
            <summary>
            Number of rift heralds killed.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.TeamStats.TeamId">
            <summary>
            Team ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.TeamStats.TowerKills">
            <summary>
            Number of towers the team destroyed.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.TeamStats.VilemawKills">
            <summary>
            Number of times the team killed vilemaw (Twisted Treeline epic monster).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.MatchEndpoint.TeamStats.Win">
            <summary>
            A string indicating whether or not the team won.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.SpectatorEndpoint.BannedChampion">
            <summary>
            Class representing a BannedChampion in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.BannedChampion.ChampionId">
            <summary>
            The ID of the banned champion
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.BannedChampion.PickTurn">
            <summary>
            The turn during which the champion was banned
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.BannedChampion.TeamId">
            <summary>
            The ID of the team that banned the champion
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.SpectatorEndpoint.CurrentGame">
            <summary>
            Class representing a CurrentGameInfo in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.CurrentGame.BannedChampions">
            <summary>
            Banned champion information
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.CurrentGame.GameId">
            <summary>
            The ID of the game
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.CurrentGame.GameLength">
            <summary>
            The amount of time in seconds that has passed since the game started
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.CurrentGame.GameMode">
            <summary>
            Game mode.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.CurrentGame.GameQueueType">
            <summary>
            The queue type
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.CurrentGame.GameStartTime">
            <summary>
            The game start time
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.CurrentGame.GameType">
            <summary>
            Game type.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.CurrentGame.MapType">
            <summary>
            Map type.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.CurrentGame.Observers">
            <summary>
            The observer information
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.CurrentGame.Participants">
            <summary>
            The participant information
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.CurrentGame.Platform">
            <summary>
            The ID of the platform on which the game is being played
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.SpectatorEndpoint.CurrentGameParticipant">
            <summary>
            Class representing a CurrentGameParticipant in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.CurrentGameParticipant.Bot">
            <summary>
            Flag indicating whether or not this participant is a bot
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.CurrentGameParticipant.ChampionId">
            <summary>
            The ID of the champion played by this participant
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.CurrentGameParticipant.ProfileIconId">
            <summary>
            The ID of the profile icon used by this participant
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.CurrentGameParticipant.SummonerSpell1">
            <summary>
            The ID of the first summoner spell used by this participant
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.CurrentGameParticipant.SummonerSpell2">
            <summary>
            The ID of the second summoner spell used by this participant
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.CurrentGameParticipant.SummonerId">
            <summary>
            The encrypted summoner ID of this participant
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.CurrentGameParticipant.SummonerName">
            <summary>
            The summoner name of this participant
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.CurrentGameParticipant.TeamId">
            <summary>
            The team ID of this participant, indicating the participant's team
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.CurrentGameParticipant.GameCustomizationObjects">
            <summary>
            List of Game Customizations
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.CurrentGameParticipant.Perks">
            <summary>
            Perks/Runes Reforged Information
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.SpectatorEndpoint.FeaturedGame">
            <summary>
            Class representing a FeaturedGameInfo  in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.FeaturedGame.BannedChampions">
            <summary>
            Banned champion information
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.FeaturedGame.GameId">
            <summary>
            The ID of the game
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.FeaturedGame.GameLength">
            <summary>
            The amount of time in seconds that has passed since the game started
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.FeaturedGame.GameMode">
            <summary>
            Game mode.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.FeaturedGame.GameQueueType">
            <summary>
            The queue type
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.FeaturedGame.GameStartTime">
            <summary>
            The game start time
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.FeaturedGame.GameType">
            <summary>
            Game type.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.FeaturedGame.MapType">
            <summary>
            Map type.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.FeaturedGame.Observers">
            <summary>
            The observer information
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.FeaturedGame.Participants">
            <summary>
            The participant information
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.FeaturedGame.Platform">
            <summary>
            The ID of the platform on which the game is being played
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.SpectatorEndpoint.FeaturedGames">
            <summary>
            Class representing Featured Games in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.FeaturedGames.ClientRefreshInterval">
            <summary>
            The suggested interval to wait before requesting FeaturedGames again
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.FeaturedGames.GameList">
            <summary>
            The list of featured games
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.SpectatorEndpoint.GameCustomizationObject">
            <summary>
            Class representing a GameCustomizationObject in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.GameCustomizationObject.Category">
            <summary>
            Category identifier for Game Customization
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.GameCustomizationObject.Content">
            <summary>
            Game Customization content
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.SpectatorEndpoint.Observer">
            <summary>
            Class representing an Observer in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.Observer.EncryptionKey">
            <summary>
            Key required to pass to the LoL client to spectate a game. (Key used to decrypt the spectator grid game data for playback)
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.SpectatorEndpoint.Participant">
            <summary>
            Class representing a Participant in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.Participant.Bot">
            <summary>
            Flag indicating whether or not this participant is a bot
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.Participant.ChampionId">
            <summary>
            The ID of the champion played by this participant
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.Participant.ProfileIconId">
            <summary>
            The ID of the profile icon used by this participant
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.Participant.SummonerSpell1">
            <summary>
            The ID of the first summoner spell used by this participant
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.Participant.SummonerSpell2">
            <summary>
            The ID of the second summoner spell used by this participant
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.Participant.SummonerName">
            <summary>
            The summoner name of this participant
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.Participant.TeamId">
            <summary>
            The team ID of this participant, indicating the participant's team
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.SpectatorEndpoint.Perks">
            <summary>
            Class representing a Perks in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.Perks.PerkStyle">
            <summary>
            Primary runes path
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.Perks.PerkSubStyle">
            <summary>
            Secondary runes path
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SpectatorEndpoint.Perks.PerkIds">
            <summary>
            IDs of the perks/runes assigned.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.SpectatorEndpoint.SpectatorEndpoint">
            <summary>
            Implementation of the <see cref="T:RiotSharp.Endpoints.Interfaces.ISpectatorEndpoint"/>
            </summary>
            <seealso cref="T:RiotSharp.Endpoints.Interfaces.ISpectatorEndpoint" />
        </member>
        <member name="M:RiotSharp.Endpoints.SpectatorEndpoint.SpectatorEndpoint.#ctor(RiotSharp.Http.Interfaces.IRateLimitedRequester)">
            <summary>
            Initializes a new instance of the <see cref="T:RiotSharp.Endpoints.SpectatorEndpoint.SpectatorEndpoint"/> class.
            </summary>
            <param name="requester">The requester.</param>
        </member>
        <member name="M:RiotSharp.Endpoints.SpectatorEndpoint.SpectatorEndpoint.GetCurrentGameAsync(RiotSharp.Misc.Region,System.String)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.SpectatorEndpoint.SpectatorEndpoint.GetFeaturedGamesAsync(RiotSharp.Misc.Region)">
            <inheritdoc />
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Champion.BlockItemStatic">
            <summary>
            Recommended items in a block (starting, essential, offensive, etc) for a champion (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.BlockItemStatic.Count">
            <summary>
            Recommended count.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.BlockItemStatic.Id">
            <summary>
            Id of the recommended item.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Champion.BlockStatic">
            <summary>
            Block of recommended items by type (starting, essential, offensive, etc) for a champion (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.BlockStatic.Items">
            <summary>
            List of recommended items.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.BlockStatic.RecMath">
            <summary>
            Rec math.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.BlockStatic.Type">
            <summary>
            Type of items (starting, essential, offensive, etc).
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionListStatic">
            <summary>
            Class representing a list of champions (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionListStatic.Champions">
            <summary>
            Map of champions indexed by their name.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionListStatic.Format">
            <summary>
            Format of the data retrieved (always null afaik).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionListStatic.Keys">
            <summary>
            Map of the champions names indexed by their id.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionListStatic.Type">
            <summary>
            TAPI type (item).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionListStatic.Version">
            <summary>
            Version of the API.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionSpellStatic">
            <summary>
            Class representing a spell of a champion (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionSpellStatic.Altimages">
            <summary>
            List of alternative images.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionSpellStatic.Cooldowns">
            <summary>
            List of the cooldowns for each level of the spell.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionSpellStatic.CooldownBurn">
            <summary>
            String representing the cooldowns for each level of the spell.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionSpellStatic.Costs">
            <summary>
            List of the costs for each level of the spell.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionSpellStatic.CostBurn">
            <summary>
            String representing the costs for each level of the spell.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionSpellStatic.CostType">
            <summary>
            Type of cost (mana, energy, percentage of current health, etc).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionSpellStatic.Description">
            <summary>
            Description of the spell.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionSpellStatic.Effects">
            <summary>
            Effects of the spell (damage, etc). This field is a List of List of Integer.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionSpellStatic.EffectBurns">
            <summary>
            String representing the effects of the spell.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionSpellStatic.Image">
            <summary>
            Image of the spell.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionSpellStatic.Key">
            <summary>
             String identifying a spell (champion's name + key to activate the spell, example: "AatroxQ".
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionSpellStatic.LevelTip">
            <summary>
            Tooltip when leveling up this spell.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionSpellStatic.MaxRank">
            <summary>
            Maximum rank of this spell.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionSpellStatic.Name">
            <summary>
            Name of this spell.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionSpellStatic.Range">
            <summary>
            This field is either a List of Integer or the String 'self' for spells that target one's own champion.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionSpellStatic.RangeBurn">
            <summary>
            String representing the range for each level of the spell.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionSpellStatic.Resource">
            <summary>
            String representing the cost for the champion when using this spell (example: "{{ e3 }}% of Current
            Health".
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionSpellStatic.SanitizedDescription">
            <summary>
            Sanitized (HTML stripped) description of the spell.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionSpellStatic.SanitizedTooltip">
            <summary>
            Sanitized (HTML stripped) tooltip of the spell.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionSpellStatic.Tooltip">
            <summary>
            Tooltip for this spell.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionSpellStatic.Vars">
            <summary>
            Various effects of this spell.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatic">
            <summary>
            Class representing a champion (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatic.AllyTips">
            <summary>
            List of tips to use while playing this champion.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatic.Blurb">
            <summary>
            Beginning of the lore.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatic.EnemyTips">
            <summary>
            List of tips to use while playing against this champion.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatic.Id">
            <summary>
            Id of this champion.
            Taken from key field to remain consistent with the old static data api.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatic.Image">
            <summary>
            Image of this champion.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatic.Info">
            <summary>
            A few statistics about this champion (attack, defense, magic, difficulty).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatic.Key">
            <summary>
            Key of this champion.
            Taken from key field to remain consistent with the old static data api.
            <para>This is diffrent from the Name attribute!
            (Name = ingame display name, Key = codebase name
            [Fiddlesticks key = FiddleSticks, Wukong key = MonkeyKing, ... ]</para>
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatic.Lore">
            <summary>
            Lore of this champion.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatic.Name">
            <summary>
            Name of this champion.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatic.Partype">
            <summary>
            Resource type of the champion (Mana, None, Energy, Shield, Rage, Ferocity, Heat, Dragonfury, Battlefury,
            Wind).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatic.Passive">
            <summary>
            Information about this champion's passive.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatic.RecommendedItems">
            <summary>
            List of recommended items for this champion.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatic.Skins">
            <summary>
            List of skins for this champion.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatic.Spells">
            <summary>
            List of spells for this champion.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatic.Stats">
            <summary>
            Stats of this champions.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatic.Tags">
            <summary>
            List of tags for this champion (Mage, Assassin, Tank, Support, etc).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatic.Title">
            <summary>
            Title of this champion.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatsStatic">
            <summary>
            A few statistics of a champion (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatsStatic.Armor">
            <summary>
            Base armor.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatsStatic.ArmorPerLevel">
            <summary>
            Armor won per level.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatsStatic.AttackDamage">
            <summary>
            Base attack damage.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatsStatic.AttackDamagePerLevel">
            <summary>
            Attack damage won per level.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatsStatic.AttackRange">
            <summary>
            Base attack range.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatsStatic.AttackSpeedOffset">
            <summary>
            Base attack speed.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatsStatic.AttackSpeedPerLevel">
            <summary>
            Attack speed won per level.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatsStatic.Crit">
            <summary>
            Base crit percentage.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatsStatic.CritPerLevel">
            <summary>
            Crit percentage won per level.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatsStatic.Hp">
            <summary>
            Base hit points.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatsStatic.HpPerLevel">
            <summary>
            Hit points won per level.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatsStatic.HpRegen">
            <summary>
            Base hit point regeneration.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatsStatic.HpRegenPerLevel">
            <summary>
            Hit points regeneration per level.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatsStatic.MoveSpeed">
            <summary>
            Base move speed.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatsStatic.Mp">
            <summary>
            Base mana points.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatsStatic.MpPerLevel">
            <summary>
            Mana points won per level.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatsStatic.MpRegen">
            <summary>
            Base mana point regeneration.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatsStatic.MpRegenPerLevel">
            <summary>
            Mana point regeneration won per level.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatsStatic.SpellBlock">
            <summary>
            Base spell block.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.ChampionStatsStatic.SpellBlockPerLevel">
            <summary>
            Spell block won per level.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Champion.Enums.TagStatic">
            <summary>
            Enum representing a champion's type.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.StaticDataEndpoint.Champion.Enums.TagStatic.Fighter">
            <summary>
            Fighter.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.StaticDataEndpoint.Champion.Enums.TagStatic.Tank">
            <summary>
            Tank.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.StaticDataEndpoint.Champion.Enums.TagStatic.Mage">
            <summary>
            Mage.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.StaticDataEndpoint.Champion.Enums.TagStatic.Assassin">
            <summary>
            Assassin.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.StaticDataEndpoint.Champion.Enums.TagStatic.Support">
            <summary>
            Support.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.StaticDataEndpoint.Champion.Enums.TagStatic.Marksman">
            <summary>
            Marksman.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Champion.InfoStatic">
            <summary>
            Basic information for a champion (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.InfoStatic.Attack">
            <summary>
            Number between 1 and 10 representing the attack power of a champion.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.InfoStatic.Defense">
            <summary>
            Number between 1 and 10 representing the defense power of a champion.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.InfoStatic.Difficulty">
            <summary>
            Number between 1 and 10 representing the difficulty of a champion.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.InfoStatic.Magic">
            <summary>
            Number between 1 and 10 representing the magic power of a champion.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Champion.LevelTipStatic">
            <summary>
            Class representing the tooltip when leveling up a spell on a champion (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.LevelTipStatic.Effects">
            <summary>
            List of string representing the effects of leveling up this spell (going from a percentage
            to another for example.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.LevelTipStatic.Labels">
            <summary>
            List of string representing which stats will be affected by leveling up this spell.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Champion.PassiveStatic">
            <summary>
            Class representing a champion's passive (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.PassiveStatic.Description">
            <summary>
            String descripting the passive.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.PassiveStatic.Image">
            <summary>
            Image of the passive.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.PassiveStatic.Name">
            <summary>
            Name of the passive.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.PassiveStatic.SanitizedDescription">
            <summary>
            Sanitized (HTML stripped) description of the passive.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Champion.RecommendedStatic">
            <summary>
            Class representing a recommended item for a champion (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.RecommendedStatic.Blocks">
            <summary>
            List of recommended items ordered by block.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.RecommendedStatic.Champion">
            <summary>
            Name of the champion for which those items are recommended.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.RecommendedStatic.Map">
            <summary>
            Map id for which those items are recommended.
            <list type="table">
            <listheader><description>Possible values:</description></listheader>
            <item><term>1</term><description>Summoner's Rift: Summer Variant</description></item>
            <item><term>2</term><description>Summoner's Rift: Autumn Variant</description></item>
            <item><term>3</term><description>The Proving Grounds: Tutorial Map</description></item>
            <item><term>4</term><description>Twisted Treeline: Original Version</description></item>
            <item><term>8</term><description>The Crystal Scar: Dominion Map</description></item>
            <item><term>10</term><description>Twisted Treeline: Current Version</description></item>
            <item><term>12</term><description>Howling Abyss: ARAM Map</description></item>
            </list>
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.RecommendedStatic.Mode">
            <summary>
            Mode for which those items are recommended.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.RecommendedStatic.Priority">
            <summary>
            Priority of the recommended items list.
            <para>This is default false for each Riot page.
            This means players' lists will normally display when a game starts instead of Riots' pages.</para>
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.RecommendedStatic.Title">
            <summary>
            Title of the items list.
            <para>(eg: Beginner / riot-beginner / VladimirHA / VladimirDM / ...)</para>
            <para>Later if costum sets are server side, we might be able to request these too.</para>
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.RecommendedStatic.Type">
            <summary>
            Type of list.
            <para>(eg: riot-beginner / riot)</para>
            <para>This is probably to find out who's list it is. (Riot's' or a players')</para>
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Champion.SkinStatic">
            <summary>
            Class representing a skin of a champion (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.SkinStatic.Id">
            <summary>
            Id of the skin.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.SkinStatic.Name">
            <summary>
            Name of the skin.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Champion.SkinStatic.Num">
            <summary>
            Ordered number of the skin.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Champion.StaticChampionEndpoint">
            <summary>
            Implementation of IStaticChampionEndpoint, inherits from <see cref="T:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointBase"/>
            </summary>
            <seealso cref="T:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointBase" />
            <seealso cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticChampionEndpoint" />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.Champion.StaticChampionEndpoint.#ctor(RiotSharp.Http.Interfaces.IRequester,RiotSharp.Caching.ICache,System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.Champion.StaticChampionEndpoint.#ctor(RiotSharp.Http.Interfaces.IRequester,RiotSharp.Caching.ICache)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.Champion.StaticChampionEndpoint.GetAllAsync(System.String,RiotSharp.Misc.Language,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.Champion.StaticChampionEndpoint.GetByKeyAsync(System.String,System.String,RiotSharp.Misc.Language)">
            <inheritdoc />
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.ImageStatic">
            <summary>
            Class representing an image (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.ImageStatic.Full">
            <summary>
            Full name for this image.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.ImageStatic.Group">
            <summary>
            Image's group (spell, champion, item, etc).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.ImageStatic.Height">
            <summary>
            Image's height.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.ImageStatic.Sprite">
            <summary>
            Image's sprite.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.ImageStatic.Width">
            <summary>
            Image's width.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.ImageStatic.X">
            <summary>
            X starting point for this image.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.ImageStatic.Y">
            <summary>
            Y starting point for this image.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Item.GoldStatic">
            <summary>
            Class representing an item's value (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.GoldStatic.BasePrice">
            <summary>
            Base price of an item.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.GoldStatic.Purchasable">
            <summary>
            Whether an item is purchasable or not.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.GoldStatic.SellingPrice">
            <summary>
            Reselling price of an item.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.GoldStatic.TotalPrice">
            <summary>
            Total price of an item.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Item.GroupStatic">
            <summary>
            Class representing an item's group (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.GroupStatic.MaxGroupOwnable">
            <summary>
            Max group ownable.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.GroupStatic.Key">
            <summary>
            Key of the group.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemListStatic">
            <summary>
            Class representing a list of items (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemListStatic.Items">
            <summary>
            Map of items indexed by their id.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemListStatic.Groups">
            <summary>
            Information about the groups of an item.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemListStatic.Trees">
            <summary>
            Items' tree (Tools, Defense, Attack, Magic, Movement).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemListStatic.Type">
            <summary>
            API type (item).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemListStatic.Version">
            <summary>
            Version of the API.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemStatic">
            <summary>
            Class representing an item (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemStatic.Colloq">
            <summary>
            Equals ";".
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemStatic.ConsumOnFull">
            <summary>
            Whether the object is to be consumed on full or not.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemStatic.Consumed">
            <summary>
            Whether the object is to be consumed or not.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemStatic.Depth">
            <summary>
            Depth.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemStatic.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemStatic.From">
            <summary>
            List of object' ids which build into this one.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemStatic.Gold">
            <summary>
            Value information about this item.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemStatic.Group">
            <summary>
            This object's group.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemStatic.HideFromAll">
            <summary>
            Hide from all.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemStatic.Id">
            <summary>
            Item's id.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemStatic.Image">
            <summary>
            This object's image.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemStatic.InStore">
            <summary>
            Whether this object is in the store or not.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemStatic.Into">
            <summary>
            List of object' ids this item builds into.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemStatic.Maps">
            <summary>
            Maps describing on which league of legends map this object is valid.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemStatic.Name">
            <summary>
            Name of the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemStatic.PlainText">
            <summary>
            Text describing this item.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemStatic.RequiredChampion">
            <summary>
            Required champion.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemStatic.Metadata">
            <summary>
            Additional information if the object is a rune.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemStatic.SanitizedDescription">
            <summary>
            Sanitized (HTML stripped) description of the item.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemStatic.SpecialRecipe">
            <summary>
            Id of the special recipe if there is one.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemStatic.Stacks">
            <summary>
            Stacks.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemStatic.Stats">
            <summary>
            Possible stats of this object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemStatic.Tags">
            <summary>
            List of possible tags (defense, perlevel, etc).
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemTreeStatic">
            <summary>
            Class representing an item tree in the shop (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemTreeStatic.Header">
            <summary>
            Tree's header (Tools, Defense, Attack, Magic, Movement).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Item.ItemTreeStatic.Tags">
            <summary>
            Tags available in this tree.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Item.StaticItemEndpoint">
            <summary>
            Implementation of <see cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticItemEndpoint"/>, inherits from <see cref="T:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointBase"/>
            </summary>
            <seealso cref="T:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointBase" />
            <seealso cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticItemEndpoint" />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.Item.StaticItemEndpoint.#ctor(RiotSharp.Http.Interfaces.IRequester,RiotSharp.Caching.ICache,System.Nullable{System.TimeSpan})">
            <summary>
            Initializes a new instance of the <see cref="T:RiotSharp.Endpoints.StaticDataEndpoint.Item.StaticItemEndpoint"/> class.
            </summary>
            <param name="requester">The requester.</param>
            <param name="cache">The cache.</param>
            <param name="slidingExpirationTime">The sliding expiration time.</param>
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.Item.StaticItemEndpoint.#ctor(RiotSharp.Http.Interfaces.IRequester,RiotSharp.Caching.ICache)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.Item.StaticItemEndpoint.GetAllAsync(System.String,RiotSharp.Misc.Language)">
            <inheritdoc />
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.LanguageStrings.LanguageStringsStatic">
            <summary>
            Class representing data returned by the language strings endpoint (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.LanguageStrings.LanguageStringsStatic.Type">
            <summary>
            Type of data returned.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.LanguageStrings.LanguageStringsStatic.Version">
            <summary>
            Version of the dragon API.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.LanguageStrings.LanguageStringsStatic.Data">
            <summary>
            Translated strings.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.LanguageStrings.StaticLanguageEndpoint">
            <summary>
            Implementation of <see cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticLanguageEndpoint"/>, inherits from <see cref="T:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointBase"/>
            </summary>
            <seealso cref="T:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointBase" />
            <seealso cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticLanguageEndpoint" />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.LanguageStrings.StaticLanguageEndpoint.#ctor(RiotSharp.Http.Interfaces.IRequester,RiotSharp.Caching.ICache,System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.LanguageStrings.StaticLanguageEndpoint.#ctor(RiotSharp.Http.Interfaces.IRequester,RiotSharp.Caching.ICache)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.LanguageStrings.StaticLanguageEndpoint.GetLanguageStringsAsync(System.String,RiotSharp.Misc.Language)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.LanguageStrings.StaticLanguageEndpoint.GetLanguagesAsync">
            <inheritdoc />
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Map.MapsStatic.Data">
            <summary>
            Map of id to map.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Map.MapStatic">
            <summary>
            Class representing a map (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Map.MapStatic.MapId">
            <summary>
            Map id.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Map.MapStatic.UnpurchasableItemList">
            <summary>
            List of ids of the unpurchasable items.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Map.MapStatic.Image">
            <summary>
            Map image.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Map.MapStatic.MapName">
            <summary>
            Map name.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Map.StaticMapEndpoint">
            <summary>
            Implementation of <see cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticMapEndpoint"/>, inherits from <see cref="T:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointBase"/>
            </summary>
            <seealso cref="T:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointBase" />
            <seealso cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticMapEndpoint" />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.Map.StaticMapEndpoint.#ctor(RiotSharp.Http.Interfaces.IRequester,RiotSharp.Caching.ICache,System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.Map.StaticMapEndpoint.#ctor(RiotSharp.Http.Interfaces.IRequester,RiotSharp.Caching.ICache)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.Map.StaticMapEndpoint.GetAllAsync(System.String,RiotSharp.Misc.Language)">
            <inheritdoc />
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Mastery.MasteryListStatic">
            <summary>
            Class representing a list of masteries (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Mastery.MasteryListStatic.Masteries">
            <summary>
            Map of masteries indexed by their id.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Mastery.MasteryListStatic.Tree">
            <summary>
            Tree of masteries.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Mastery.MasteryListStatic.Type">
            <summary>
            API type (mastery).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Mastery.MasteryListStatic.Version">
            <summary>
            Version of the API.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Mastery.MasteryStatic">
            <summary>
            Class representing a mastery (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Mastery.MasteryStatic.Description">
            <summary>
            List of string descripting the mastery.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Mastery.MasteryStatic.Id">
            <summary>
            Mastery's id.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Mastery.MasteryStatic.Image">
            <summary>
            Mastery's image.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Mastery.MasteryStatic.Name">
            <summary>
            Mastery's name.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Mastery.MasteryStatic.Prerequisite">
            <summary>
            Id of the prerequisite mastery.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Mastery.MasteryStatic.Rank">
            <summary>
            Mastery's rank.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Mastery.MasteryStatic.SanitizedDescription">
            <summary>
            Sanitized (HTML stripped) description of the mastery.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Mastery.MasteryTreeItemStatic">
            <summary>
            Class representing a mastery tree item or talent (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Mastery.MasteryTreeItemStatic.MasteryId">
            <summary>
            Id of the mastery.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Mastery.MasteryTreeItemStatic.Prerequisite">
            <summary>
            Prerequisite.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Mastery.MasteryTreeListStatic">
            <summary>
            Class representing a list of mastery trees (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Mastery.MasteryTreeListStatic.MasteryTreeItems">
            <summary>
            List of mastery tree items.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Mastery.MasteryTreeStatic">
            <summary>
            Mastery tree.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Mastery.MasteryTreeStatic.Defense">
            <summary>
            List of list of objects (masteryId, prereq) in the defense tree.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Mastery.MasteryTreeStatic.Offense">
            <summary>
            List of list of objects (masteryId, prereq) in the offense tree.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Mastery.MasteryTreeStatic.Utility">
            <summary>
            List of list of objects (masteryId, prereq) in the utility tree.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Mastery.StaticMasteryEndpoint">
            <summary>
            Implementation of <see cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticMasteryEndpoint"/>, inherits from <see cref="T:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointBase"/>
            </summary>
            <seealso cref="T:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointBase" />
            <seealso cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticMasteryEndpoint" />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.Mastery.StaticMasteryEndpoint.#ctor(RiotSharp.Http.Interfaces.IRequester,RiotSharp.Caching.ICache,System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.Mastery.StaticMasteryEndpoint.#ctor(RiotSharp.Http.Interfaces.IRequester,RiotSharp.Caching.ICache)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.Mastery.StaticMasteryEndpoint.GetAllAsync(System.String,RiotSharp.Misc.Language)">
            <inheritdoc />
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.MetadataStatic">
            <summary>
            Class representing metadata on runes and items (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.MetadataStatic.IsRune">
            <summary>
            Whether this item is a rune or not.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.MetadataStatic.Tier">
            <summary>
            Tier of the rune.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.MetadataStatic.Type">
            <summary>
            Type of the rune.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.ProfileIcons.StaticProfileIconEndpoint">
            <summary>
            Implementation of <see cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticProfileIconEndpoint"/>, inherits from <see cref="T:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointBase"/>
            </summary>
            <seealso cref="T:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointBase" />
            <seealso cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticProfileIconEndpoint" />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.ProfileIcons.StaticProfileIconEndpoint.#ctor(RiotSharp.Http.Interfaces.IRequester,RiotSharp.Caching.ICache,System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.ProfileIcons.StaticProfileIconEndpoint.#ctor(RiotSharp.Http.Interfaces.IRequester,RiotSharp.Caching.ICache)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.ProfileIcons.StaticProfileIconEndpoint.GetAllAsync(System.String,RiotSharp.Misc.Language)">
            <inheritdoc />
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Realm.RealmStatic">
            <summary>
            Class representing a realm (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Realm.RealmStatic.Cdn">
            <summary>
            The base CDN url.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Realm.RealmStatic.Css">
            <summary>
            Latest changed version of Dragon Magic's css file.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Realm.RealmStatic.Dd">
            <summary>
            Latest changed version of Dragon Magic.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Realm.RealmStatic.L">
            <summary>
            Default language for this realm.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Realm.RealmStatic.Lg">
            <summary>
            Legacy script mode for IE6 or older.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Realm.RealmStatic.N">
            <summary>
            Latest changed version for each data type listed.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Realm.RealmStatic.ProfileIconMax">
            <summary>
            Special behavior number identifying the largest profileicon id that can be used under 500.
            Any profileicon that is requested between this number and 500 should be mapped to 0.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Realm.RealmStatic.Store">
            <summary>
            Additional api data drawn from other sources that may be related to data dragon functionality.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Realm.RealmStatic.V">
            <summary>
            Current version of this file for this realm.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Realm.StaticRealmEndpoint">
            <summary>
            
            </summary>
            <seealso cref="T:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointBase" />
            <seealso cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticRealmEndpoint" />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.Realm.StaticRealmEndpoint.#ctor(RiotSharp.Http.Interfaces.IRequester,RiotSharp.Caching.ICache,System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.Realm.StaticRealmEndpoint.#ctor(RiotSharp.Http.Interfaces.IRequester,RiotSharp.Caching.ICache)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.Realm.StaticRealmEndpoint.GetAllAsync(RiotSharp.Misc.Region)">
            <inheritdoc />
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.ReforgedRune.ReforgedRuneStatic">
            <summary>
            Class representing a reforged rune (Static API).
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.ReforgedRune.StaticReforgedRuneEndpoint">
            <summary>
            Implementation of <see cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticReforgedRuneEndpoint"/>, inherits from <see cref="T:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointBase"/>
            </summary>
            <seealso cref="T:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointBase" />
            <seealso cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticReforgedRuneEndpoint" />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.ReforgedRune.StaticReforgedRuneEndpoint.#ctor(RiotSharp.Http.Interfaces.IRequester,RiotSharp.Caching.ICache,System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.ReforgedRune.StaticReforgedRuneEndpoint.#ctor(RiotSharp.Http.Interfaces.IRequester,RiotSharp.Caching.ICache)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.ReforgedRune.StaticReforgedRuneEndpoint.GetAllAsync(System.String,RiotSharp.Misc.Language)">
            <inheritdoc />
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneListStatic">
            <summary>
            Class representing a list of runes (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneListStatic.Runes">
            <summary>
            Map of runes indexed by their id.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneListStatic.Type">
            <summary>
            API type (rune).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneListStatic.Version">
            <summary>
            Version of the API.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneStatic">
            <summary>
            Class representing a rune (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneStatic.Colloq">
            <summary>
            Equals ";".
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneStatic.ConsumOnFull">
            <summary>
            Whether the object is to be consumed on full or not.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneStatic.Consumed">
            <summary>
            Whether the object is to be consumed or not.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneStatic.Depth">
            <summary>
            Depth.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneStatic.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneStatic.From">
            <summary>
            List of object' ids which build into this one.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneStatic.Gold">
            <summary>
            Value information about this item.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneStatic.Group">
            <summary>
            This object's group.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneStatic.HideFromAll">
            <summary>
            Hide from all.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneStatic.Id">
            <summary>
            Item's id.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneStatic.Image">
            <summary>
            This object's image.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneStatic.InStore">
            <summary>
            Whether this object is in the store or not.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneStatic.Into">
            <summary>
            List of object' ids this item builds into.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneStatic.Maps">
            <summary>
            Maps describing on which league of legends map this object is valid.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneStatic.Name">
            <summary>
            Name of the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneStatic.PlainText">
            <summary>
            Text describing this item.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneStatic.RequiredChampion">
            <summary>
            Required champion.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneStatic.Metadata">
            <summary>
            Additional information if the object is a rune.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneStatic.SanitizedDescription">
            <summary>
            Sanitized (HTML stripped) description of the item.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneStatic.SpecialRecipe">
            <summary>
            Id of the special recipe if there is one.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneStatic.Stacks">
            <summary>
            Stacks.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneStatic.Stats">
            <summary>
            Possible stats of this object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.Rune.RuneStatic.Tags">
            <summary>
            List of possible tags (defense, perlevel, etc).
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Rune.StaticRuneEndpoint">
            <summary>
            Implementation of <see cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticRuneEndpoint"/>, inherits from <see cref="T:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointBase"/>
            </summary>
            <seealso cref="T:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointBase" />
            <seealso cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticRuneEndpoint" />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.Rune.StaticRuneEndpoint.#ctor(RiotSharp.Http.Interfaces.IRequester,RiotSharp.Caching.ICache,System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.Rune.StaticRuneEndpoint.#ctor(RiotSharp.Http.Interfaces.IRequester,RiotSharp.Caching.ICache)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.Rune.StaticRuneEndpoint.GetAllAsync(System.String,RiotSharp.Misc.Language)">
            <inheritdoc />
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.SpellVarsStatic">
            <summary>
            Class representing various information about a summoner spell (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SpellVarsStatic.Coeff">
            <summary>
            Coeff for this summoner spell for the summoner's level.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SpellVarsStatic.Dyn">
            <summary>
            Seems to always be equal to + when it is present.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SpellVarsStatic.Key">
            <summary>
            Key.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SpellVarsStatic.Link">
            <summary>
            Link.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SpellVarsStatic.RanksWith">
            <summary>
            Ranks with.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.StaticDataEndpoints">
            <summary>
            Implementation of <see cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticDataEndpoints"/>
            </summary>
            <seealso cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticDataEndpoints" />
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StaticDataEndpoints.Champions">
            <inheritdoc />
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StaticDataEndpoints.Items">
            <inheritdoc />
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StaticDataEndpoints.Languages">
            <inheritdoc />
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StaticDataEndpoints.Maps">
            <inheritdoc />
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StaticDataEndpoints.Masteries">
            <inheritdoc />
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StaticDataEndpoints.ProfileIcons">
            <inheritdoc />
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StaticDataEndpoints.Realms">
            <inheritdoc />
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StaticDataEndpoints.ReforgedRunes">
            <inheritdoc />
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StaticDataEndpoints.Runes">
            <inheritdoc />
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StaticDataEndpoints.SummonerSpells">
            <inheritdoc />
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StaticDataEndpoints.Versions">
            <inheritdoc />
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StaticDataEndpoints.TarballLinks">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.StaticDataEndpoints.GetInstance(System.Boolean)">
            <summary>
            Get the instance of StaticDataEndpoints which contains all the static Endpoints as Properties.
            </summary>
            <returns>The instance of StaticDataEndpoint.</returns>
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.StaticDataEndpoints.#ctor(RiotSharp.Endpoints.Interfaces.Static.IStaticEndpointProvider)">
            <summary>
            Default dependency injection constructor
            </summary>
            <param name="staticEndpointProvider">provider that provides configured static-endpoints</param>
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.StaticDataEndpoints.#ctor(RiotSharp.Http.Interfaces.IRequester,RiotSharp.Caching.ICache)">
            <summary>
            StatidDataEndpoint using the default <see cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticEndpointProvider"/>
            </summary>
            <param name="requester"></param>
            <param name="cache"></param>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointBase">
            <summary>
            Abstract base class which implements <see cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticEndpoint"/>
            </summary>
            <seealso cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticEndpoint" />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointBase.#ctor(RiotSharp.Http.Interfaces.IRequester,RiotSharp.Caching.ICache,System.Nullable{System.TimeSpan},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointBase"/> class.
            </summary>
            <param name="requester">The requester.</param>
            <param name="cache">The cache.</param>
            <param name="slidingExpirationTime">The sliding expiration time.</param>
            <param name="useHttps">if set to <c>true</c> [use HTTPS].</param>
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointBase.#ctor(RiotSharp.Http.Interfaces.IRequester,RiotSharp.Caching.ICache)">
            <summary>
            Initializes a new instance of the <see cref="T:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointBase"/> class.
            </summary>
            <param name="requester">The requester.</param>
            <param name="cache">The cache.</param>
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointBase.CreateUrl(System.String,RiotSharp.Misc.Language,System.String)">
            <summary>
            Creates the URL.
            </summary>
            <param name="version">The version.</param>
            <param name="language">The language.</param>
            <param name="dataKey">The data key.</param>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointProvider">
            <summary>
            Implementation of <see cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticEndpointProvider"/>
            </summary>
            <seealso cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticEndpointProvider" />
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointProvider.Endpoints">
            <summary>
            A list of StaticEndpoints
            </summary>
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointProvider.#ctor(RiotSharp.Http.Interfaces.IRequester,RiotSharp.Caching.ICache,System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointProvider.#ctor(System.Collections.Generic.IEnumerable{RiotSharp.Endpoints.Interfaces.Static.IStaticEndpoint})">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointProvider.GetEndpoint``1">
            <inheritdoc />
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic">
            <summary>
            Class representing stats (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatArmorMod">
            <summary>
            Flat Armor value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatAttackSpeedMod">
            <summary>
            Flat Attack Speed value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatBlockMod">
            <summary>
            Flat Block value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatCritChanceMod">
            <summary>
            Flat Critical Chance value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatCritDamageMod">
            <summary>
            Flat Critical Damage multiplier for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatEnergyRegenMod">
            <summary>
            Flat Enery Regeneration value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatEnergyPoolMod">
            <summary>
            Flat Total Energy value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatEXPBonus">
            <summary>
            Flat Experience bonus value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatHPPoolMod">
            <summary>
            Flat Total Health value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatHPRegenMod">
            <summary>
            Flat Health Regeneration value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatMPPoolMod">
            <summary>
            Flat Total Mana value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatMPRegenMod">
            <summary>
            Flat Mana Regeneration value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatMagicDamageMod">
            <summary>
            Flat Magic Damage value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatMovementSpeedMod">
            <summary>
            Flat Movement Speed value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatPhysicalDamageMod">
            <summary>
            Flat Physical Damage value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatSpellBlockMod">
            <summary>
            Flat Magic Resist value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.PercentArmorMod">
            <summary>
            Percent Armor value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.PercentAttackSpeedMod">
            <summary>
            Percent Attack Speed value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.PercentBlockMod">
            <summary>
            Percent Block value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.PercentCritChanceMod">
            <summary>
            Percent Critical Chance value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.PercentCritDamageMod">
            <summary>
            Percent Critical Damage Multiplier value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.PercentDodgeMod">
            <summary>
            Percent Dodge value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.PercentEXPBonus">
            <summary>
            Percent Experience Bonus value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.PercentHPPoolMod">
            <summary>
            Percent Total HP value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.PercentHPRegenMod">
            <summary>
            Percent Health Regeneration value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.PercentLifeStealMod">
            <summary>
            Percent Life Steal value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.PercentMPPoolMod">
            <summary>
            Percent Total Mana value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.PercentMPRegenMod">
            <summary>
            Percent Mana Regeneration value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.PercentMagicDamageMod">
            <summary>
            Percent Magic Damage value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.PercentMovementSpeedMod">
            <summary>
            Percent Movement Speed value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.PercentPhysicalDamageMod">
            <summary>
            Percent Physical Damage value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.PercentSpellBlockMod">
            <summary>
            Percent Magic Resist value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.PercentSpellVampMod">
            <summary>
            Percent Spell Vamp value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatArmorModPerLevel">
            <summary>
            Flat Armor per Level value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatArmorPenetrationMod">
            <summary>
            Flat Armor Penetration value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatArmorPenetrationModPerLevel">
            <summary>
            Flat Armor per Level value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatCritChanceModPerLevel">
            <summary>
            Flat Critical Chance per Level value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatCritDamageModPerLevel">
            <summary>
            Flat Critical Damage per Level value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatDodgeMod">
            <summary>
            Flat Dodge value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatDodgeModPerLevel">
            <summary>
            Flat Dodge per Level value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatEnergyRegenModPerLevel">
            <summary>
            Flat Energy Regeneration per Level value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatEnergyModPerLevel">
            <summary>
            Flat Energy per Level value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatGoldPer10Mod">
            <summary>
            Flat Gold per 10 value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatHPModPerLevel">
            <summary>
            Flat Health per Level value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatHPRegenModPerLevel">
            <summary>
            Flat Health Regeneration per Level value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatMPModPerLevel">
            <summary>
            Flat Mana per Level value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatMPRegenModPerLevel">
            <summary>
            Flat Mana Regeneration per Level value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatMagicDamageModPerLevel">
            <summary>
            Flat Magic Damage per Level value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatMagicPenetrationMod">
            <summary>
            Flat Magic Penetration value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatMagicPenetrationModPerLevel">
            <summary>
            Flat Magic Penetration per Level value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatMovementSpeedModPerLevel">
            <summary>
            Flat Movement Speed per Level value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatPhysicalDamageModPerLevel">
            <summary>
            Flat Physical Damage per Level value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatSpellBlockModPerLevel">
            <summary>
            Flat Magic Resist per Level value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatTimeDeadMod">
            <summary>
            Flat Time Dead value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.FlatTimeDeadModPerLevel">
            <summary>
            Flat Time Dead per Level value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.PercentArmorPenetrationMod">
            <summary>
            Percent Armor Penetration value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.PercentArmorPenetrationModPerLevel">
            <summary>
            Percent Armor Penetration per Level value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.PercentAttackSpeedModPerLevel">
            <summary>
            Percent Attack Speed per Level value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.PercentCooldownMod">
            <summary>
            Percent Cooldown Reduction value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.PercentCooldownModPerLevel">
            <summary>
            Percent Cooldown Reduction per Level value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.PercentMagicPenetrationMod">
            <summary>
            Percent Magic Penetration value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.PercentMagicPenetrationModPerLevel">
            <summary>
            Percent Magic Penetration per Level value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.PercentMovementSpeedModPerLevel">
            <summary>
            Percent Movement Speed per Level value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.PercentTimeDeadMod">
            <summary>
            Percent Time Dead value for the object.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.StatsStatic.PercentTimeDeadModPerLevel">
            <summary>
            Percent Time Dead per Level value for the object.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.StaticSummonerSpellEndpoint">
            <summary>
            Implementation of <see cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticSummonerSpellEndpoint"/>, inherits from <see cref="T:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointBase"/>
            </summary>
            <seealso cref="T:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointBase" />
            <seealso cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticSummonerSpellEndpoint" />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.StaticSummonerSpellEndpoint.#ctor(RiotSharp.Http.Interfaces.IRequester,RiotSharp.Caching.ICache,System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.StaticSummonerSpellEndpoint.#ctor(RiotSharp.Http.Interfaces.IRequester,RiotSharp.Caching.ICache)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.StaticSummonerSpellEndpoint.GetAllAsync(System.String,RiotSharp.Misc.Language)">
            <inheritdoc />
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpell">
            <summary>
            Enum representing the different summon spells.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpell.Barrier">
            <summary>
            Barrier.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpell.Cleanse">
            <summary>
            Cleanse.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpell.Clairvoyance">
            <summary>
            Clairvoyance.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpell.Ignite">
            <summary>
            Ignite.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpell.Exhaust">
            <summary>
            Exhaust.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpell.Flash">
            <summary>
            Flash.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpell.Ghost">
            <summary>
            Ghost.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpell.Heal">
            <summary>
            Heal.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpell.Clarity">
            <summary>
            Clarity.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpell.Garrison">
            <summary>
            Garrison.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpell.Revive">
            <summary>
            Revive.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpell.Smite">
            <summary>
            Smite.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpell.Teleport">
            <summary>
            Teleport.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellListStatic">
            <summary>
            Class representing a list of summoner spells (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellListStatic.SummonerSpells">
            <summary>
            Map of summoner spells indexed by their name.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellListStatic.Type">
            <summary>
            API type (summoner).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellListStatic.Version">
            <summary>
            Version of the API.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellStatic">
            <summary>
            Class representing a summoner spell (Static API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellStatic.Cooldowns">
            <summary>
            List of cooldowns for this spell.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellStatic.CooldownBurn">
            <summary>
            String of cooldowns for this spell.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellStatic.Costs">
            <summary>
            List of costs for this spell.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellStatic.CostBurn">
            <summary>
            String of costs for this spell.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellStatic.CostType">
            <summary>
            Cost type (NoCost).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellStatic.Description">
            <summary>
            Spell's description.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellStatic.Effects">
            <summary>
            List of object representing the effects of this spell.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellStatic.EffectBurns">
            <summary>
            String representing the effects of this spell.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellStatic.Id">
            <summary>
            Spell's id.
            Taken from key field to remain consistent with the old static data api.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellStatic.Image">
            <summary>
            Spell's image.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellStatic.Key">
            <summary>
            Spell's key.
            Taken from id field to remain consistent with the old static data api.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellStatic.LevelTip">
            <summary>
            Tooltip when leveling up this spell.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellStatic.MaxRank">
            <summary>
            Spell's maxrank (1).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellStatic.Modes">
            <summary>
            Modes this spell are available in.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellStatic.Name">
            <summary>
            Spell's name.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellStatic.Range">
            <summary>
            Spell's range. This field is either a List of Integer or the String 'self' for spells that target one's own champion.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellStatic.RangeBurn">
            <summary>
            Spell's range as a string.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellStatic.Resource">
            <summary>
            Resource needed for this spell (NoCost).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellStatic.SanitizedDescription">
            <summary>
            Sanitized (HTML stripped) description of the spell.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellStatic.SanitizedTooltip">
            <summary>
            Sanitized (HTML stripped) tooltip of the spell.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellStatic.SummonerLevel">
            <summary>
            Summoner level required to use this spell.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellStatic.Tooltip">
            <summary>
            Spell's tooltip.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StaticDataEndpoint.SummonerSpell.SummonerSpellStatic.Vars">
            <summary>
            Various information about this spell.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.TarballLinks.StaticTarballLinkEndPoint">
            <summary>
            Implementation of <see cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticTarballLinkEndPoint"/>
            </summary>
            <seealso cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticTarballLinkEndPoint" />
            <seealso cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticEndpoint" />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.TarballLinks.StaticTarballLinkEndPoint.Get(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:RiotSharp.Endpoints.StaticDataEndpoint.Version.StaticVersionEndpoint">
            <summary>
            Implementation of <see cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticVersionEndpoint"/>, inherits from <see cref="T:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointBase"/>
            </summary>
            <seealso cref="T:RiotSharp.Endpoints.StaticDataEndpoint.StaticEndpointBase" />
            <seealso cref="T:RiotSharp.Endpoints.Interfaces.Static.IStaticVersionEndpoint" />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.Version.StaticVersionEndpoint.#ctor(RiotSharp.Http.Interfaces.IRequester,RiotSharp.Caching.ICache,System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.Version.StaticVersionEndpoint.#ctor(RiotSharp.Http.Interfaces.IRequester,RiotSharp.Caching.ICache)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.StaticDataEndpoint.Version.StaticVersionEndpoint.GetAllAsync">
            <inheritdoc />
        </member>
        <member name="T:RiotSharp.Endpoints.StatusEndpoint.Incident">
            <summary>
            Class representing an incident inside a service (Status API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StatusEndpoint.Incident.Active">
            <summary>
            Whether or not this incident is still active.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StatusEndpoint.Incident.CreatedAt">
            <summary>
            Date at which point the incident was logged.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StatusEndpoint.Incident.Id">
            <summary>
            Id of the incident.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StatusEndpoint.Incident.Updates">
            <summary>
            List of updates for this incident.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StatusEndpoint.Message">
            <summary>
            Class representing messages for an incident (Status API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StatusEndpoint.Message.Author">
            <summary>
            Author of the message.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StatusEndpoint.Message.Content">
            <summary>
            Content of the message.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StatusEndpoint.Message.CreatedAt">
            <summary>
            Date at which point the message was created.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StatusEndpoint.Message.Id">
            <summary>
            Id of the message.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StatusEndpoint.Message.Severity">
            <summary>
            Severity of the messaage.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StatusEndpoint.Message.Translations">
            <summary>
            List of available translations for this message.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StatusEndpoint.Message.UpdatedAt">
            <summary>
            Date at which point the message was last updated.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StatusEndpoint.Service">
            <summary>
            Class representing a service (Status API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StatusEndpoint.Service.Incidents">
            <summary>
            List of incidents for this service.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StatusEndpoint.Service.Name">
            <summary>
            Name of the service.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StatusEndpoint.Service.Slug">
            <summary>
            Slug.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StatusEndpoint.Service.Status">
            <summary>
            Service's status.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StatusEndpoint.Shard">
            <summary>
            Class representing a shard (Status API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StatusEndpoint.Shard.Hostname">
            <summary>
            Hostname of the shard.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StatusEndpoint.Shard.Locales">
            <summary>
            List of locales supported by this shard.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StatusEndpoint.Shard.Name">
            <summary>
            Name of the region the shard is handling.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StatusEndpoint.Shard.RegionTag">
            <summary>
            Tag of the region the shard is handling.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StatusEndpoint.Shard.Slug">
            <summary>
            Slug.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StatusEndpoint.ShardStatus">
            <summary>
            Class representing a shard's status (Status API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StatusEndpoint.ShardStatus.Services">
            <summary>
            List of services for this shard.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.StatusEndpoint.StatusEndpoint">
            <summary>
            Implementation of <see cref="T:RiotSharp.Endpoints.Interfaces.IStatusEndpoint"/>
            </summary>
            <seealso cref="!:RiotSharp.Interfaces.IStatusEndpoint" />
        </member>
        <member name="M:RiotSharp.Endpoints.StatusEndpoint.StatusEndpoint.GetShardStatusAsync(RiotSharp.Misc.Region)">
            <inheritdoc />
        </member>
        <member name="T:RiotSharp.Endpoints.StatusEndpoint.Translation">
            <summary>
            Class representing a translation of a message (Status API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StatusEndpoint.Translation.Content">
            <summary>
            Translated content of the message.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StatusEndpoint.Translation.Locale">
            <summary>
            Language in which the translation was done.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.StatusEndpoint.Translation.UpdatedAt">
            <summary>
            Date at which point the translation was last updated.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.SummonerEndpoint.Summoner">
            <summary>
            Class representing a Summoner in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SummonerEndpoint.Summoner.ProfileIconId">
            <summary>
            ID of the summoner icon associated with the summoner.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SummonerEndpoint.Summoner.RevisionDate">
            <summary>
            Date summoner was last modified.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SummonerEndpoint.Summoner.Level">
            <summary>
            Summoner level associated with the summoner.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.SummonerEndpoint.SummonerBase">
            <summary>
            Class representing the name and id of a Summoner in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SummonerEndpoint.SummonerBase.Region">
            <summary>
            Defines the Region of a Summoner.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SummonerEndpoint.SummonerBase.Id">
            <summary>
            Encrypted summoner ID. Max length 63 characters.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SummonerEndpoint.SummonerBase.AccountId">
            <summary>
            Encrypted account ID. Max length 56 characters.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SummonerEndpoint.SummonerBase.Name">
            <summary>
            Summoner name.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.SummonerEndpoint.SummonerBase.Puuid">
            <summary>
            Encrypted PUUID. Exact length of 78 characters.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.SummonerEndpoint.SummonerEndpoint">
            <summary>
            Implementation of <see cref="T:RiotSharp.Endpoints.Interfaces.ISummonerEndpoint"/>
            </summary>
            <seealso cref="T:RiotSharp.Endpoints.Interfaces.ISummonerEndpoint" />
        </member>
        <member name="M:RiotSharp.Endpoints.SummonerEndpoint.SummonerEndpoint.#ctor(RiotSharp.Http.Interfaces.IRateLimitedRequester,RiotSharp.Caching.ICache)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.SummonerEndpoint.SummonerEndpoint.GetSummonerBySummonerIdAsync(RiotSharp.Misc.Region,System.String)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.SummonerEndpoint.SummonerEndpoint.GetSummonerByAccountIdAsync(RiotSharp.Misc.Region,System.String)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.SummonerEndpoint.SummonerEndpoint.GetSummonerByNameAsync(RiotSharp.Misc.Region,System.String)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Endpoints.SummonerEndpoint.SummonerEndpoint.GetSummonerByPuuidAsync(RiotSharp.Misc.Region,System.String)">
            <inheritdoc />
        </member>
        <member name="T:RiotSharp.Endpoints.TeamEndpoint.MatchHistorySummary">
            <summary>
            Summary of the match history of the team (Team API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.MatchHistorySummary.Assists">
            <summary>
            Number of assists.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.MatchHistorySummary.Date">
            <summary>
            Date when the match took place.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.MatchHistorySummary.Deaths">
            <summary>
            Number of deaths overall.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.MatchHistorySummary.GameId">
            <summary>
            Game id.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.MatchHistorySummary.GameMode">
            <summary>
            Game mode.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.MatchHistorySummary.Invalid">
            <summary>
            Boolean specifying if the match was invalid.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.MatchHistorySummary.Kills">
            <summary>
            Number of kills.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.MatchHistorySummary.MapId">
            <summary>
            Id of the map.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.MatchHistorySummary.OpposingTeamKills">
            <summary>
            Number of kills for the opposing team.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.MatchHistorySummary.OpposingTeamName">
            <summary>
            Name of the opposite team.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.MatchHistorySummary.Win">
            <summary>
            Match won if true, lost if false.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.TeamEndpoint.MessageOfDay">
            <summary>
            Message of the day of the team (Team API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.MessageOfDay.CreateDate">
            <summary>
            Date of the message creation.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.MessageOfDay.Message">
            <summary>
            Message.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.MessageOfDay.Version">
            <summary>
            Version of the message.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.TeamEndpoint.Roster">
            <summary>
            Roster of the team (Team API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.Roster.MemberList">
            <summary>
            List of the team members of the roster.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.Roster.OwnerId">
            <summary>
            Id of the owner of the team.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.TeamEndpoint.Team">
            <summary>
            Class representing a Team in the API.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.Team.CreateDate">
            <summary>
            Date of the team creation.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.Team.FullId">
            <summary>
            Team id.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.Team.LastGameDate">
            <summary>
            Date of the last game.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.Team.LastJoinDate">
            <summary>
            Date when the last member joined the team.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.Team.LastJoinedRankedTeamQueueDate">
            <summary>
            Date when the team last joined their queue.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.Team.MatchHistory">
            <summary>
            Match history.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.Team.ModifyDate">
            <summary>
            Last time the team was modified.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.Team.Name">
            <summary>
            Name of the team.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.Team.Roster">
            <summary>
            Roster of the team.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.Team.SecondLastJoinDate">
            <summary>
            Date when the second last member joined the team..
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.Team.Status">
            <summary>
            Status of the team.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.Team.Tag">
            <summary>
            Tag of the team.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.Team.TeamStatDetails">
            <summary>
            Stat summary of the team.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.Team.ThirdLastJoinDate">
            <summary>
            Date when the third last member joined the team.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.TeamEndpoint.TeamMemberInfo">
            <summary>
            Information about team members (Team API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.TeamMemberInfo.InviteDate">
            <summary>
            Date this team member was invited.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.TeamMemberInfo.JoinDate">
            <summary>
            Date this team member joined the team.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.TeamMemberInfo.PlayerId">
            <summary>
            Id of the team member.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.TeamMemberInfo.Status">
            <summary>
            Status of the team member (owner, member, etc).
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.TeamEndpoint.TeamStatDetail">
            <summary>
            Team stats (Team API).
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.TeamStatDetail.AverageGamesPlayed">
            <summary>
            Number of games played on average.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.TeamStatDetail.Losses">
            <summary>
            Number of losses.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.TeamStatDetail.TeamStatType">
            <summary>
            Type of team stat.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TeamEndpoint.TeamStatDetail.Wins">
            <summary>
            Number of wins.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.ThirdPartyEndpoint.ThirdPartyEndpoint">
            <summary>
            Implementation of <see cref="T:RiotSharp.Endpoints.Interfaces.IThirdPartyEndpoint"/>
            </summary>
            <seealso cref="T:RiotSharp.Endpoints.Interfaces.IThirdPartyEndpoint" />
        </member>
        <member name="M:RiotSharp.Endpoints.ThirdPartyEndpoint.ThirdPartyEndpoint.#ctor(RiotSharp.Http.Interfaces.IRateLimitedRequester)">
            <summary>
            Initializes a new instance of the <see cref="T:RiotSharp.Endpoints.ThirdPartyEndpoint.ThirdPartyEndpoint"/> class.
            </summary>
            <param name="requester">The requester.</param>
        </member>
        <member name="M:RiotSharp.Endpoints.ThirdPartyEndpoint.ThirdPartyEndpoint.GetThirdPartyCodeBySummonerIdAsync(RiotSharp.Misc.Region,System.String)">
            <inheritdoc />
        </member>
        <member name="T:RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentEventType">
            <summary>
                The type of event that was triggered in the lobby (Tournament API).
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentEventType.PracticeGameCreatedEvent">
            <summary>
            Lobby created.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentEventType.PlayerJoinedGameEvent">
            <summary>
            Player joins lobby.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentEventType.PlayerSwitchedTeamEvent">
            <summary>
            Player switches teams.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentEventType.PlayerQuitGameEvent">
            <summary>
            Player leaves lobby
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentEventType.ChampSelectStartedEvent">
            <summary>
            Champion selection begins.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentEventType.GameAllocationStartedEvent">
            <summary>
            Loading screen begins.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentEventType.GameAllocatedToLsmEvent">
            <summary>
            Game begins.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentMapType">
            <summary>
                Mode of the game (Tournament API).
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentMapType.SummonersRift">
            <summary>
            Summoner's Rift map.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentMapType.TwistedTreeline">
            <summary>
            Twisted Treeline map.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentMapType.CrystalScar">
            <summary>
            Crystal Scar (Dominion) map.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentMapType.HowlingAbyss">
            <summary>
            Howling Abyss (ARAM) map.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentPickType">
            <summary>
                Pick type of the game (Tournament API).
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentPickType.BlindPick">
            <summary>
            Blind pick mode.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentPickType.DraftMode">
            <summary>
            Draft pick mode.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentPickType.AllRandom">
            <summary>
            All random mode.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentPickType.TournamentDraft">
            <summary>
            Tournament draft mode (adds ability to pause).
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentSpectatorType">
            <summary>
                Spectator type of the game (Tournament API).
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentSpectatorType.None">
            <summary>
            No spectators allowed.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentSpectatorType.LobbyOnly">
            <summary>
            Spectators only allowed in the lobby.
            </summary>
        </member>
        <member name="F:RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentSpectatorType.All">
            <summary>
            Spectators allowed in the lobby and the game itself.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.TournamentEndpoint.TournamentCodeDetail">
            <summary>
                Class representing the details of a tournament code.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TournamentEndpoint.TournamentCodeDetail.Code">
            <summary>
                The tournament code.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TournamentEndpoint.TournamentCodeDetail.Id">
            <summary>
                The tournament code's ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TournamentEndpoint.TournamentCodeDetail.LobbyName">
            <summary>
                The lobby name for the tournament code game.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TournamentEndpoint.TournamentCodeDetail.Map">
            <summary>
                The game map for the tournament code game.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TournamentEndpoint.TournamentCodeDetail.MetaData">
            <summary>
                The metadata for tournament code.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TournamentEndpoint.TournamentCodeDetail.Participants">
            <summary>
                Set of summoner IDs.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TournamentEndpoint.TournamentCodeDetail.Password">
            <summary>
                The password for the tournament code game.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TournamentEndpoint.TournamentCodeDetail.PickType">
            <summary>
                The pick mode for tournament code game.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TournamentEndpoint.TournamentCodeDetail.ProviderId">
            <summary>
                The provider's ID.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TournamentEndpoint.TournamentCodeDetail.Region">
            <summary>
                The tournament code's region.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TournamentEndpoint.TournamentCodeDetail.SpectatorType">
            <summary>
                The spectator mode for the tournament code game.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TournamentEndpoint.TournamentCodeDetail.TeamSize">
            <summary>
                The team size for the tournament code game.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TournamentEndpoint.TournamentCodeDetail.TournamentId">
            <summary>
                The tournament's ID.
            </summary>
        </member>
        <member name="T:RiotSharp.Endpoints.TournamentEndpoint.TournamentLobbyEvent">
            <summary>
            Represents a tournament lobby event in the Riot tournament API.
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TournamentEndpoint.TournamentLobbyEvent.EventType">
            <summary>
                The type of event that was triggered
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TournamentEndpoint.TournamentLobbyEvent.SummonerId">
            <summary>
                The summoner that triggered the event
            </summary>
        </member>
        <member name="P:RiotSharp.Endpoints.TournamentEndpoint.TournamentLobbyEvent.Timestamp">
            <summary>
                Timestamp from the event
            </summary>
        </member>
        <member name="M:RiotSharp.Http.Interfaces.IRateLimitedRequester.CreateGetRequestAsync(System.String,RiotSharp.Misc.Region,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
             Create a get request and send it asynchronously to the server.
            </summary>
            <param name="relativeUrl"></param>
            <param name="region"></param>
            <param name="queryParameters"></param>
            <param name="useHttps"></param>
            <returns>The content of the response.</returns>
            <exception cref="T:RiotSharp.RiotSharpException">
            Thrown if an Http error occurs. 
            Contains the Http error code and error message.
            </exception>
        </member>
        <member name="M:RiotSharp.Http.Interfaces.IRateLimitedRequester.CreatePostRequestAsync(System.String,RiotSharp.Misc.Region,System.String,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Create a post request and send it asynchronously to the server.
            </summary>
            <param name="relativeUrl"></param>
            <param name="region"></param>
            <param name="body"></param>
            <param name="queryParameters"></param>
            <param name="useHttps"></param>
            <returns>The content of the response.</returns>
            <exception cref="T:RiotSharp.RiotSharpException">
            Thrown if an Http error occurs. 
            Contains the Http error code and error message.
            </exception>
        </member>
        <member name="M:RiotSharp.Http.Interfaces.IRateLimitedRequester.CreatePutRequestAsync(System.String,RiotSharp.Misc.Region,System.String,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Create a post request and send it asynchronously to the server.
            </summary>
            <param name="relativeUrl"></param>
            <param name="region"></param>
            <param name="body"></param>
            <param name="queryParameters"></param>
            <param name="useHttps"></param>
            <returns>The content of the response.</returns>
            <exception cref="T:RiotSharp.RiotSharpException">
            Thrown if an Http error occurs. 
            Contains the Http error code and error message.
            </exception>
        </member>
        <member name="M:RiotSharp.Http.Interfaces.IRequester.CreateGetRequestAsync(System.String,RiotSharp.Misc.Region,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Create a get request and send it asynchronously to the server.
            </summary>
            <param name="relativeUrl"></param>
            <param name="region"></param>
            <param name="queryParameters"></param>
            <param name="useHttps"></param>
            <returns>The content of the response.</returns>
            <exception cref="T:RiotSharp.RiotSharpException">
            Thrown if an Http error occurs. 
            Contains the Http error code and error message.
            </exception>
        </member>
        <member name="M:RiotSharp.Http.Interfaces.IRequester.CreateGetRequestAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Create a get request and send it asynchronously to the server.
            </summary>
            <param name="host">The host.</param>
            <param name="relativeUrl">The relative URL.</param>
            <param name="queryParameters">The query parameters.</param>
            <param name="useHttps">Use HTTPS based on the boolean. Default = true</param>
        </member>
        <member name="T:RiotSharp.Http.RateLimitedRequester">
            <summary>
            A requester with a rate limiter
            </summary>
            <seealso cref="T:RiotSharp.Http.RequesterBase" />
            <seealso cref="T:RiotSharp.Http.Interfaces.IRateLimitedRequester" />
        </member>
        <member name="M:RiotSharp.Http.RateLimitedRequester.#ctor(System.String,System.Collections.Generic.IDictionary{System.TimeSpan,System.Int32},System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Http.RateLimitedRequester.CreateGetRequestAsync(System.String,RiotSharp.Misc.Region,System.Collections.Generic.List{System.String},System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Http.RateLimitedRequester.CreatePostRequestAsync(System.String,RiotSharp.Misc.Region,System.String,System.Collections.Generic.List{System.String},System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Http.RateLimitedRequester.CreatePutRequestAsync(System.String,RiotSharp.Misc.Region,System.String,System.Collections.Generic.List{System.String},System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Http.RateLimitedRequester.GetRateLimiter(RiotSharp.Misc.Region)">
            <summary>
            Returns the respective region's RateLimiter, creating it if needed.
            </summary>
            <param name="region"></param>
            <returns></returns>
        </member>
        <member name="M:RiotSharp.Http.RateLimitedRequester.GetRateLimitedResponseContentAsync(System.Net.Http.HttpRequestMessage,RiotSharp.Misc.Region)">
            <summary>
            Sends a configured <see cref="T:System.Net.Http.HttpRequestMessage"/> possibly Rate-Limited for the specific <paramref name="region"/>
            </summary>
            <param name="request">Pre-Configured <see cref="T:System.Net.Http.HttpRequestMessage"/></param>
            <param name="region">The region which's requests should be rate limited</param>
        </member>
        <member name="F:RiotSharp.Http.RateLimiter._accessSemaphore">
            <summary>Semaphore to prevent multiple requests from interferering with each other's rate limit
            calculations.</summary>
        </member>
        <member name="F:RiotSharp.Http.RateLimiter._retryAfter">
            <summary>Time to retry when 429 Retry-After headers are set.</summary>
        </member>
        <member name="F:RiotSharp.Http.RateLimiter._rateLimits">
            <summary>Key is rate limit interval, value is the maximum requests allowed in that interval.</summary>
        </member>
        <member name="F:RiotSharp.Http.RateLimiter._rateLimitStarts">
            <summary>Key is rate limit interval, value is time the inteval started.</summary>
        </member>
        <member name="F:RiotSharp.Http.RateLimiter._rateLimitCounts">
            <summary>Key is rate limit interval, value is the current request count.</summary>
        </member>
        <member name="F:RiotSharp.Http.RateLimiter._throwOnDelay">
            <summary>Indicates if rate limit exceeded exception is thrown, when the rate limit is exceeded. </summary>
        </member>
        <member name="M:RiotSharp.Http.RateLimiter.SetRetryAfter(System.TimeSpan)">
            <summary>
            Sets the retry after delay when a request returns 429.
            Note that this won't affect a (single) request that has already called HandleRateLimitAsync and is
            currently waiting.
            </summary>
            <param name="delay">Time to delay.</param>
        </member>
        <member name="M:RiotSharp.Http.RateLimiter.HandleRateLimitAsync">
            <summary>Creates a task that blocks until a request can be made without violating rate limit rules. Release
            must be called after the task completes.</summary>
        </member>
        <member name="M:RiotSharp.Http.RateLimiter.GetDelay">
            <summary>
            Gets the delay required. Should only be called when accessSemaphore is currently owned. Non-destructive.
            </summary>
            <returns></returns>
        </member>
        <member name="M:RiotSharp.Http.RateLimiter.UpdateDelay">
            <summary>
            Update the delays counters after GetDelay() has been waited.
            </summary>
        </member>
        <member name="T:RiotSharp.Http.Requester">
            <summary>
            A requester without a rate limiter.
            </summary>
            <seealso cref="T:RiotSharp.Http.RequesterBase" />
            <seealso cref="T:RiotSharp.Http.Interfaces.IRequester" />
        </member>
        <member name="M:RiotSharp.Http.Requester.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Http.Requester.#ctor">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Http.Requester.CreateGetRequestAsync(System.String,RiotSharp.Misc.Region,System.Collections.Generic.List{System.String},System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Http.Requester.CreateGetRequestAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Http.RequesterBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RiotSharp.Http.RequesterBase"/> class.
            </summary>
            <param name="apiKey">The API key.</param>
            <exception cref="T:System.ArgumentNullException">apiKey</exception>
        </member>
        <member name="M:RiotSharp.Http.RequesterBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RiotSharp.Http.RequesterBase"/> class.
            </summary>
        </member>
        <member name="M:RiotSharp.Http.RequesterBase.SendAsync(System.Net.Http.HttpRequestMessage)">
            <summary>
            Send a <see cref="T:System.Net.Http.HttpRequestMessage"/> asynchronously.
            </summary>
            <param name="request"></param>
            <returns></returns>
            <exception cref="T:RiotSharp.RiotSharpException">Thrown if an Http error occurs. Contains the Http error code and error message.</exception>
        </member>
        <member name="T:RiotSharp.Interfaces.IRiotApi">
            <summary>
            Entry point for the API.
            </summary>
        </member>
        <member name="P:RiotSharp.Interfaces.IRiotApi.Summoner">
            <summary>
            The Summoner Endpoint.
            </summary>
        </member>
        <member name="P:RiotSharp.Interfaces.IRiotApi.Champion">
            <summary>
            The Champion Endpoint.
            </summary>
        </member>
        <member name="P:RiotSharp.Interfaces.IRiotApi.League">
            <summary>
            The League Endpoint.
            </summary>
        </member>
        <member name="P:RiotSharp.Interfaces.IRiotApi.Match">
            <summary>
            The Match Endpoint.
            </summary>
        </member>
        <member name="P:RiotSharp.Interfaces.IRiotApi.Spectator">
            <summary>
            The Spectator Endpoint.
            </summary>
        </member>
        <member name="P:RiotSharp.Interfaces.IRiotApi.ChampionMastery">
            <summary>
            The Champion Mastery Endpoint.
            </summary>
        </member>
        <member name="P:RiotSharp.Interfaces.IRiotApi.ThirdParty">
            <summary>
            The Third Party Endpoint.
            </summary>
        </member>
        <member name="P:RiotSharp.Interfaces.IRiotApi.StaticData">
            <summary>
            The Static Data Endpoint.
            </summary>
        </member>
        <member name="T:RiotSharp.Interfaces.ITournamentRiotApi">
            <summary>
            Entry point for the tournament API.
            </summary>
        </member>
        <member name="M:RiotSharp.Interfaces.ITournamentRiotApi.CreateProviderAsync(RiotSharp.Misc.Region,System.String)">
            <summary>
                Creates a tournament provider and returns its object.
            </summary>
            <param name="region">The region in which the provider will be running tournaments.</param>
            <param name="url">
                The provider's callback URL to which tournament game results in this region should be posted. The URL
                must be well-formed, use the http or https protocol, and use the default port for the protocol (http URLs must use
                port 80, https URLs must use port 443).
            </param>
            <returns>The ID of the provider.</returns>
        </member>
        <member name="M:RiotSharp.Interfaces.ITournamentRiotApi.CreateTournamentAsync(System.Int32,System.String)">
            <summary>
                Creates a tournament and returns its object.
            </summary>
            <param name="providerId">The provider ID to specify the regional registered provider data to associate this tournament.</param>
            <param name="name">The optional name of the tournament.</param>
            <returns>The ID of the tournament.</returns>
        </member>
        <member name="M:RiotSharp.Interfaces.ITournamentRiotApi.CreateTournamentCodesAsync(System.Int32,System.Int32,System.Int32,RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentSpectatorType,RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentPickType,RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentMapType,System.Collections.Generic.List{System.Int64},System.String)">
            <summary>
                Create multiple tournament codes for the given tournament id.
            </summary>
            <param name="tournamentId">The tournament ID</param>
            <param name="teamSize">The team size of the game. Valid values are 1-5.</param>
            <param name="spectatorType">The spectator type of the game.</param>
            <param name="pickType">The pick type of the game.</param>
            <param name="mapType">The map type of the game.</param>
            <param name="allowedParticipantIds">List of id's for allowed participants. Defaults to null</param>
            <param name="metadata">
                Optional string that may contain any data in any format, if specified at all. Used to denote any
                custom information about the game.
            </param>
            <param name="count">The number of codes to create (max 1000).</param>
            <returns>A list of tournament codes in string format.</returns>
        </member>
        <member name="M:RiotSharp.Interfaces.ITournamentRiotApi.GetTournamentCodeDetailsAsync(System.String)">
            <summary>
                Returns the details of a certain tournament code.
            </summary>
            <param name="tournamentCode">The tournament code in string format.</param>
            <returns>TournamentCodeDetail object with details of the tournament code.</returns>
        </member>
        <member name="M:RiotSharp.Interfaces.ITournamentRiotApi.GetTournamentLobbyEventsAsync(System.String)">
            <summary>
                Gets a list of lobby events by tournament code.
            </summary>
            <param name="tournamentCode">A tournament code in string format.</param>
            <returns>List of TournamentLobbyEvents.</returns>
        </member>
        <member name="M:RiotSharp.Interfaces.ITournamentRiotApi.UpdateTournamentCodeAsync(System.String,System.Collections.Generic.List{System.Int64},System.Nullable{RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentSpectatorType},System.Nullable{RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentPickType},System.Nullable{RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentMapType})">
            <summary>
                Update the pick type, map, spectator type, or allowed summoners for a code.
            </summary>
            <param name="tournamentCode">The tournament code to update</param>
            <param name="allowedSummonerIds">List of summoner id's.</param>
            <param name="spectatorType">The spectator type.</param>
            <param name="pickType">The pick type.</param>
            <param name="mapType">The map type.</param>
            /// <returns>Success value.</returns>
        </member>
        <member name="M:RiotSharp.Interfaces.ITournamentRiotApi.GetTournamentMatchAsync(RiotSharp.Misc.Region,System.Int64,System.String,System.Boolean)">
            <summary>
                Retrieve match by match ID and tournament code.
            </summary>
            <param name="region">The region of the match.</param>
            <param name="matchId">The ID of the match.</param>
            <param name="tournamentCode">The tournament code of the match.</param>
            <param name="includeTimeline">Flag indicating whether or not to include match timeline data.</param>
            <returns>MatchDetail object.</returns>
        </member>
        <member name="M:RiotSharp.Interfaces.ITournamentRiotApi.GetTournamentMatchIdAsync(RiotSharp.Misc.Region,System.String)">
            <summary>
                Retrieve match IDs by tournament code.
            </summary>
            <param name="region">The region of the match.</param>
            <param name="tournamentCode">The tournament code of the match.</param>
            <returns>The match id of the match played with the tournament code entered.</returns>
        </member>
        <member name="T:RiotSharp.Misc.Converters.MapTypeConverter">
            <summary>
            Converts a <see cref="T:RiotSharp.Misc.MapType"/> from and to JSON
            </summary>
            <seealso cref="T:Newtonsoft.Json.JsonConverter" />
        </member>
        <member name="M:RiotSharp.Misc.Converters.MapTypeConverter.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Misc.Converters.MapTypeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Misc.Converters.MapTypeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Misc.Converters.PlatformConverter.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Misc.Converters.PlatformConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.Misc.Converters.PlatformConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:RiotSharp.Misc.CultureInfoExtensions">
            <summary>
            Extensions to use on <see cref="T:System.Globalization.CultureInfo"/>
            </summary>
        </member>
        <member name="M:RiotSharp.Misc.CultureInfoExtensions.ToLanguage(System.Globalization.CultureInfo)">
            <summary>
            Converts the value of this instance to its equivalent Language representation.
            </summary>
            <param name="cultureInfo"></param>
            <returns>The Language representation of the value of this instance.</returns>
            <exception cref="T:System.ArgumentException">Thrown if an unsupported CultureInfo is provided.</exception>
        </member>
        <member name="T:RiotSharp.Misc.GameMode">
            <summary>
            Mode of the game (Game API).
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.GameMode.Classic">
            <summary>
            Classic Summoner's Rift and Twisted Treeline games.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.GameMode.Dominion">
            <summary>
            Dominion/Crystal Scar games.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.GameMode.Aram">
            <summary>
            ARAM games.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.GameMode.Tutorial">
            <summary>
            Tutorial games.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.GameMode.OneForAll">
            <summary>
            One for All games.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.GameMode.FirstBlood">
            <summary>
            Snowdown Showdown games.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.GameMode.Ascension">
            <summary>
            Ascension mode games.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.GameMode.Intro">
            <summary>
            Introduction game mode.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.GameMode.KingPoro">
            <summary>
            King Poro game mode.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.GameMode.Siege">
            <summary>
            Nexus Siege game mode.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.GameMode.Assassinate">
            <summary>
            Assassinate game mode.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.GameMode.Darkstar">
            <summary>
            Darkstar game mode.
            </summary>
        </member>
        <member name="T:RiotSharp.Misc.GameType">
            <summary>
            Type of the game.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.GameType.CustomGame">
            <summary>
            Custom games.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.GameType.MatchedGame">
            <summary>
            Neither tutorial nor custom games
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.GameType.TutorialGame">
            <summary>
            Tutorial games.
            </summary>
        </member>
        <member name="T:RiotSharp.Misc.Lane">
            <summary>
            Participant's lane (Match API).
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Lane.Mid">
            <summary>
            Corresponds to mid lane.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Lane.Middle">
            <summary>
            Corresponds to mid lane.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Lane.Top">
            <summary>
            Corresponds to top lane.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Lane.Jungle">
            <summary>
            Corresponds to jungle.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Lane.Bot">
            <summary>
            Corresponds to bot lane.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Lane.Bottom">
            <summary>
            Corresponds to bot lane.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Lane.None">
            <summary>
            Corresponds to ARAM lane.
            </summary>
        </member>
        <member name="T:RiotSharp.Misc.Language">
            <summary>
            Language for the data retrieved (Static API).
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.en_US">
            <summary>
            American English.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.en_GB">
            <summary>
            British English.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.en_PL">
            <summary>
            Polish English.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.en_AU">
            <summary>
            Australian English.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.en_PH">
            <summary>
            Filipino English.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.en_SG">
            <summary>
            Singaporean English.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.pl_PL">
            <summary>
            Polish.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.cs_CZ">
            <summary>
            Czech.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.hu_HU">
            <summary>
            Hungarian.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.de_DE">
            <summary>
            German.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.es_ES">
            <summary>
            Spanish.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.es_AR">
            <summary>
            Argentinian Spanish.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.es_MX">
            <summary>
            Latam Spanish.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.fr_FR">
            <summary>
            French.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.it_IT">
            <summary>
            Italian.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.ro_RO">
            <summary>
            Romanian.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.el_GR">
            <summary>
            Greek.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.pt_PT">
            <summary>
            Portuguese
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.pt_BR">
            <summary>
            Brazilian Portuguese.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.tr_TR">
            <summary>
            Turkish.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.ru_RU">
            <summary>
            Russian.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.zh_CN">
            <summary>
            Chinese.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.zh_TW">
            <summary>
            Taiwanese Chinese.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.ko_KR">
            <summary>
            Korean.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.bg_BG">
            <summary>
            Bulgarian.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.id_ID">
            <summary>
            Indonesian.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.ms_MY">
            <summary>
            Malaysian.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.zh_MY">
            <summary>
            Malaysian Chinese.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.nl_NL">
            <summary>
            Dutch.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.th_TH">
            <summary>
            Thaï.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.vn_VN">
            <summary>
            Vietnamese.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Language.ja_JP">
            <summary>
            Japanese.
            </summary>
        </member>
        <member name="T:RiotSharp.Misc.MapType">
            <summary>
            Map of the game. Populate the mapId field
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.MapType.SummonersRiftSummerVariant">
            <summary>
            Summoner's Rift Summer Variant
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.MapType.SummonersRiftAutumnVariant">
            <summary>
            Summoner's Rift Autumn Variant
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.MapType.TheProvingGrounds">
            <summary>
            The Proving Grounds Tutorial Map
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.MapType.TwistedTreelineOriginal">
            <summary>
            Twisted Treeline Original Version
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.MapType.TheCrystalScar">
             <summary>
            The Crystal Scar Dominion Map
             </summary>
        </member>
        <member name="F:RiotSharp.Misc.MapType.TwistedTreelineCurrent">
            <summary>
            Twisted Treeline Current Version
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.MapType.SummonersRift">
            <summary>
            Summoner's Rift Current Version
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.MapType.HowlingAbyss">
            <summary>
            Howling Abyss ARAM Map
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.MapType.CosmicRuins">
            <summary>
            Darkstar Map
            </summary>
        </member>
        <member name="T:RiotSharp.Misc.Platform">
            <summary>
            Platform for the API.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Platform.NA1">
            <summary>
            North America.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Platform.BR1">
            <summary>
            Brasil.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Platform.LA1">
            <summary>
            Latin America North.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Platform.LA2">
            <summary>
            Latin America South.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Platform.OC1">
            <summary>
            Oceania.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Platform.EUN1">
            <summary>
            North-eastern Europe.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Platform.TR1">
            <summary>
            Turkey.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Platform.RU">
            <summary>
            Russia.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Platform.EUW1">
            <summary>
            Western Europe.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Platform.KR">
            <summary>
            Korea.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Platform.JP1">
            <summary>
            Japan.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Platform.NoPlatform">
            <summary>
            No Platform (e.g. platformId of bot players).
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Queue.RankedSolo5x5">
            <summary>
            Solo queue 5 vs 5
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Queue.RankedTeam3x3">
            <summary>
            Team 3 vs 3
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Queue.RankedTeam5x5">
            <summary>
            Team 5 vs 5
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Queue.TeamBuilderDraftRanked5x5">
            <summary>
            Team 5 v 5 - Dynamic Queue - Ranked
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Queue.TeamBuilderDraftUnranked5x5">
            <summary>
            Team 5 v 5 - Dynamic Queue - Unranked
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Queue.RankedFlexSR">
            <summary>
            New Summoner's Rift ranked games
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Queue.RankedFlexTT">
            <summary>
            New Twisted Treeline ranked games
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Queue.TeamBuilderRankedSolo">
            <summary>
            Ranked Solo games from current season that use Team Builder matchmaking
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Queue.RankedPremade3x3">
            <summary>
            Used for both historical Ranked Premade 3v3 games
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Queue.RankedPremade5x5">
            <summary>
            Ranked Premade 5v5 games
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Queue.Darkstar">
            <summary>
            Darkstar games
            </summary>
        </member>
        <member name="T:RiotSharp.Misc.Region">
            <summary>
            Region for the API.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Region.Br">
            <summary>
            Brasil.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Region.Eune">
            <summary>
            North-eastern europe.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Region.Euw">
            <summary>
            Western europe.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Region.Na">
            <summary>
            North america.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Region.Kr">
            <summary>
            South korea.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Region.Lan">
            <summary>
            Latin America North.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Region.Las">
            <summary>
            Latin America South.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Region.Oce">
            <summary>
            Oceania.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Region.Ru">
            <summary>
            Russia.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Region.Tr">
            <summary>
            Turkey.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Region.Jp">
            <summary>
            Japan.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Region.Global">
            <summary>
            Global.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Region.Americas">
            <summary>
            Regional proxy for services only deployed in North America. For example the tournament and tournament stub services.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Region.Europe">
            <summary>
            Regional proxy for services only deployed in Europe.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Region.Asia">
            <summary>
            Regional proxy for services only deployed in Asia.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Region.NoRegion">
            <summary>
            Region associated with Platform.NoPlatform (e.g. platform of bot players).
            </summary>
        </member>
        <member name="T:RiotSharp.Misc.Role">
            <summary>
            Participant's role (Match API).
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Role.Duo">
            <summary>
            Corresponds to duo lane.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Role.None">
            <summary>
            Corresponds to no role.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Role.Solo">
            <summary>
            Corresponds to solo lanes (mid or top).
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Role.DuoCarry">
            <summary>
            Corresponds to ad carry.
            </summary>
        </member>
        <member name="F:RiotSharp.Misc.Role.DuoSupport">
            <summary>
            Corresponds to support.
            </summary>
        </member>
        <member name="T:RiotSharp.RiotApi">
            <summary>
            Implementation of <see cref="T:RiotSharp.Interfaces.IRiotApi"/>
            </summary>
            <seealso cref="T:RiotSharp.Interfaces.IRiotApi" />
        </member>
        <member name="P:RiotSharp.RiotApi.Summoner">
            <inheritdoc />
        </member>
        <member name="P:RiotSharp.RiotApi.Champion">
            <inheritdoc />
        </member>
        <member name="P:RiotSharp.RiotApi.League">
            <inheritdoc />
        </member>
        <member name="P:RiotSharp.RiotApi.Match">
            <inheritdoc />
        </member>
        <member name="P:RiotSharp.RiotApi.Spectator">
            <inheritdoc />
        </member>
        <member name="P:RiotSharp.RiotApi.ChampionMastery">
            <inheritdoc />
        </member>
        <member name="P:RiotSharp.RiotApi.ThirdParty">
            <inheritdoc />
        </member>
        <member name="P:RiotSharp.RiotApi.StaticData">
            <inheritdoc />
        </member>
        <member name="P:RiotSharp.RiotApi.Status">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.RiotApi.GetDevelopmentInstance(System.String,System.Int32,System.Int32,RiotSharp.Caching.ICache)">
            <summary>
            Gets the instance of RiotApi, with development rate limits by default.
            </summary>
            <param name="apiKey">The api key.</param>
            <param name="rateLimitPer1s">The 1 second rate limit for your api key. 20 by default.</param>
            <param name="rateLimitPer2m">The 2 minute rate limit for your api key. 100 by default.</param>
            <param name="cache">The cache.</param>
            <returns>
            The instance of RiotApi.
            </returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetInstance(System.String,System.Int32,System.Int32,RiotSharp.Caching.ICache)">
            <summary>
            Get the instance of RiotApi.
            </summary>
            <param name="apiKey">The api key.</param>
            <param name="rateLimitPer10s">The 10 seconds rate limit for your production api key.</param>
            <param name="rateLimitPer10m">The 10 minutes rate limit for your production api key.</param>
            <param name="cache">The cache.</param>
            <returns>
            The instance of RiotApi.
            </returns>
        </member>
        <member name="M:RiotSharp.RiotApi.GetInstance(System.String,System.Collections.Generic.IDictionary{System.TimeSpan,System.Int32},RiotSharp.Caching.ICache)">
            <summary>
            Gets the instance of RiotApi, allowing custom rate limits.
            </summary>
            <param name="apiKey">The api key.</param>
            <param name="rateLimits">A dictionary of rate limits where the key is the time span and the value
            is the number of requests allowed per that time span.</param>
            <param name="cache">The cache.</param>
            <returns>
            The instance of RiotApi.
            </returns>
        </member>
        <member name="M:RiotSharp.RiotApi.#ctor(RiotSharp.Http.Interfaces.IRateLimitedRequester,RiotSharp.Http.Interfaces.IRequester,RiotSharp.Endpoints.Interfaces.Static.IStaticEndpointProvider,RiotSharp.Caching.ICache)">
            <summary>
            Dependency injection constructor
            </summary>
            <param name="rateLimitedRequester">Rate limited requester for all endpoints except the static endpoint.</param>
            <param name="staticEndpointProvider">The static endpoint provider.</param>
            <param name="cache">The cache.</param>
            <exception cref="T:System.ArgumentNullException">
            rateLimitedRequester
            or
            staticEndpointProvider
            </exception>
        </member>
        <member name="T:RiotSharp.RiotSharpException">
            <summary>
            RiotSharp exception.
            </summary>
        </member>
        <member name="F:RiotSharp.RiotSharpException.HttpStatusCode">
            <summary>HTTP error code returned by the Riot API, causing this exception.</summary>
        </member>
        <member name="M:RiotSharp.RiotSharpException.#ctor(System.String,System.Net.HttpStatusCode)">
            <summary>
            Initializes a new instance of the <see cref="T:RiotSharp.RiotSharpException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="httpStatusCode">The HTTP status code.</param>
        </member>
        <member name="T:RiotSharp.TournamentRiotApi">
            <summary>
            Implementation of <see cref="T:RiotSharp.Interfaces.ITournamentRiotApi"/>
            </summary>
            <seealso cref="T:RiotSharp.Interfaces.ITournamentRiotApi" />
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.#ctor(RiotSharp.Http.Interfaces.IRateLimitedRequester,System.Boolean)">
            <summary>
            Default constructor for dependency injection
            </summary>
            <param name="rateLimitedRequester">The rate limited requester.</param>
            <param name="useStub">If true, the tournament stub will be used for requests.
            Useful for testing purposes.</param>
            <exception cref="T:System.ArgumentNullException">rateLimitedRequester</exception>
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.GetInstance(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Get the instance of TournamentRiotApi.
            </summary>
            <param name="apiKey">The api key.</param>
            <param name="rateLimitPer10S">The 10 seconds rate limit for your production api key.</param>
            <param name="rateLimitPer10M">The 10 minutes rate limit for your production api key.</param>
            <param name="useStub">
            If true, the tournament stub will be used for requests. 
            Useful for testing purposes.
            </param>
            <returns>The instance of TournamentRiotApi.</returns>
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.GetInstance(System.String,System.Collections.Generic.IDictionary{System.TimeSpan,System.Int32},System.Boolean)">
            <summary>
            Get the instance of TournamentRiotApi.
            </summary>
            <param name="apiKey">The api key.</param>
            <param name="rateLimits">A dictionary of rate limits where the key is the time span and the value
            is the number of requests allowed per that time span. Use null for no limits (default).</param>
            <param name="useStub">If true, the tournament stub will be used for requests.
            Useful for testing purposes.</param>
            <returns>
            The instance of TournamentRiotApi.
            </returns>
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.CreateProviderAsync(RiotSharp.Misc.Region,System.String)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.CreateTournamentAsync(System.Int32,System.String)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.CreateTournamentCodesAsync(System.Int32,System.Int32,System.Int32,RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentSpectatorType,RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentPickType,RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentMapType,System.Collections.Generic.List{System.Int64},System.String)">
            <inheritdoc />
            <exception cref="T:System.ArgumentException">Thrown if an invalid <paramref name="teamSize" /> or an invalid <paramref name="count" /> is provided.</exception>
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.GetTournamentCodeDetailsAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.GetTournamentLobbyEventsAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.UpdateTournamentCodeAsync(System.String,System.Collections.Generic.List{System.Int64},System.Nullable{RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentSpectatorType},System.Nullable{RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentPickType},System.Nullable{RiotSharp.Endpoints.TournamentEndpoint.Enums.TournamentMapType})">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.GetTournamentMatchAsync(RiotSharp.Misc.Region,System.Int64,System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:RiotSharp.TournamentRiotApi.GetTournamentMatchIdAsync(RiotSharp.Misc.Region,System.String)">
            <inheritdoc />
        </member>
    </members>
</doc>
